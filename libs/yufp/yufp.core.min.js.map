{"version":3,"sources":["yufp.core.js"],"names":["window","yufp","core","version","Utils","prototype","_toString","Object","toString","class2type","[object Boolean]","[object Number]","[object String]","[object Function]","[object Array]","[object Date]","[object RegExp]","[object Object]","type","obj","this","call","String","isWindow","isFunction","isArray","isArrayLike","length","merge","first","second","i","j","len","makeArray","arr","results","ret","push","isPlainObject","nodeType","key","hasOwn","hasOwnProperty","constructor","undefined","clone","src","dest","extend","getInnerText","ele","text","innerText","textContent","setInnerText","getNextElementSibling","rEle","nextElementSibling","nextSibling","getFirstElementChild","firstElementChild","firstChild","args2Arr","args","Array","apply","utils","arguments","target","deep","options","copy","copyIsArray","each","callback","uidStore","uid","idType","start","prefix","id","uidcode","code","TreeNode","children","Bus","root","put","argLen","logger","error","node","name","data","get","remove","bus","Logger","fn","console","debug","info","configLevel","needInfo","needDebug","needwarn","needError","log","_print","isStrprint","join","warn","Ajax","_this","xhr","createXHR","setting","defaultSetting","asyncTimeout","onreadystatechange","method","toUpperCase","reqData","processData","url","indexOf","open","encodeURI","async","withCredentials","beforeSend","cloneArgs","cache","setRequestHeader","headers","send","ex","message","complete","contentType","dataType","timeout","encode","Message","readyState","loading","success","status","rspData","response","responseText","decode","e","ontimeout","XMLHttpRequest","IEXHRVers","ActiveXObject","toLowerCase","res","isObj","value","item","JSON","stringify","parse","ajax","DEFERRED_STATUS","Deferred","doneFns","failFns","alwaysFns","Running","fire","shift","Done","Fail","done","fail","always","resolve","reject","EVENT_CHAIN_STATUS","EventChain","waitFns","chain","Free","Busy","task","post","concat","wait","isFinish","policy","Policy","EventProxy","register","bind","once","queue","limitless","unbind","all","remaining","values","keys","splice","trigger","slice","emit","ModuleStatus","Modules","path","module","contains","clear","Module","Resource","REQUIRE_STATUS","Progress","n","size","lastIndex","work","flag","index","isOK","TaskNode","params","progress","checkCss","meta","isLoaded","sheet","isOldWebKit","cssRules","setTimeout","time","Require","win","doc","document","head","getElementsByTagName","documentElement","navigator","userAgent","replace","paths","alias","base","charset","modules","resource","config","runEnv","resolvePath","use","require","libs","list","s","ss","split","deferred","Defined","exports","taskNode","execMountTask","mount","point","getFileNamePostfix","querySelector","mountJS","mountCSS","body","mountHTML","createElement","setAttribute","supportOnload","removeChild","onload","onerror","preNode","getElementById","parentNode","rel","href","appendChild","t","innerHTML","LoadFinish","Loading","test","define","createDefine","_require","deps","factory","Defining","argsLen","uri","parserPath","postfix","lastIndexOf","substring","path1","href1","location","pathName1","pathname","protocol","host","projectName","href2","path3","mark","pathName","FilterType","OpenPolicy","Router","routeTable","activePages","history","historyCacheSize","filters","settings","mountHandlers","eventChain","addMountHandler","DefaultMountHandler","handler","getMountHandler","removeMountHandler","addFilter","filter","removeFilter","doFilters","_args","_i","Before","before","Mount","Ready","ready","UnMount","unMount","destroy","addRoute","route","unit","removeRoute","getRoute","addRouteTable","clearRouteTable","setDefaultRootId","rootId","getDefaultRootId","setHistoryCacheSize","getHistoryCacheSize","addHistory","rec","checkHistory","his","exist","forEach","removeHistory","clearHistory","back","term","pre","openPolicy","Append","recs","isBack","to","Replace","append","nodes","cite","targetId","startTime","Date","getTime","mountHandlerType","lastPages","page","lastIndexOfPages","curTime","releasePages","pages","isChild","endIndex","js","Destroy","isChildNode","child","childNode","parent","sendMessage","onmessage","findPage","router","cssNodes","jsNodes","nodeName","css","html","rId","cssPoint","jsPoint","hasChildNodes","newHtmlNode","hNodeId","el","VmMgr","duration","vmSeedAttr","vmSeed","vmAlive","minxinExecuted","vmGetSeedId","vmStorageRemove","vm","vmStoragePut","mixin","Vue","mounted","$el","getAttribute","vmMgr","ViewMountHandler","mId","view","classList","add","style","divEl","vsid","$destroy","_gc","CollectGarbage"],"mappings":"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","file":"yufp.core.min.js","sourcesContent":["/** Yufp-core v1.1.2 Copyright © 2017-2018 Yusys All Rights Reserved. */\r\n\r\n/**\r\n * /src/core/version.js\r\n * @created by helin3 2018-08-09\r\n * @updated by\r\n * @description 首次导出yufp对象\r\n */\r\n(function (exports) {\r\n  /**\r\n   * 导出全局yufp对象\r\n   */\r\n  exports.yufp = {\r\n    core: {\r\n      version: '1.1.2.180904'\r\n    }\r\n  };\r\n}(window));\r\n\n/**\r\n * /src/core/utils.js\r\n * @created by jiangcheng 2017-12-20\r\n * @updated by helin3 2018-08-09\r\n * @description core-utils 核心工具类对象\r\n */\r\n(function (core, yufp) {\r\n  /**\r\n   * 构建Utils工具对象\r\n   * @constructor\r\n   */\r\n  var Utils = function () {\r\n  };\r\n\r\n  /**\r\n   * toString方法\r\n   */\r\n  Utils.prototype._toString = Object.prototype.toString;\r\n\r\n  /**\r\n   * 对象toString字符串与类型对应map\r\n   */\r\n  Utils.prototype.class2type = {\r\n    '[object Boolean]': 'boolean',\r\n    '[object Number]': 'number',\r\n    '[object String]': 'string',\r\n    '[object Function]': 'function',\r\n    '[object Array]': 'array',\r\n    '[object Date]': 'date',\r\n    '[object RegExp]': 'regExp',\r\n    '[object Object]': 'object'\r\n  };\r\n\r\n  /**\r\n   * 类型检测，相对typeof更精确\r\n   * @param {*} obj\r\n   * @return 返回对象类型字符串\r\n   */\r\n  Utils.prototype.type = function (obj) {\r\n    var type = this._toString.call(obj);\r\n    return obj == null ? String(obj) : this.class2type[type] || 'object';\r\n  };\r\n\r\n  /**\r\n   * 判断对象是否window对象\r\n   * @param {*} obj\r\n   * @return true or false\r\n   */\r\n  Utils.prototype.isWindow = function (obj) {\r\n    return obj != null && obj === obj.window;\r\n  };\r\n\r\n  /**\r\n   * 判断对象是否方法\r\n   * @param {*} obj\r\n   * @return true or false\r\n   */\r\n  Utils.prototype.isFunction = function (obj) {\r\n    return this.type(obj) == 'function';\r\n  };\r\n\r\n  /**\r\n   * 判断对象是否数组\r\n   * @param {*} obj\r\n   * @return true or false\r\n   */\r\n  Utils.prototype.isArray = function (obj) {\r\n    return this.type(obj) === 'array';\r\n  };\r\n\r\n  /**\r\n   * 判断对象是否类似数组\r\n   * @param {*} obj\r\n   * @return true or false\r\n   */\r\n  Utils.prototype.isArrayLike = function (obj) {\r\n    var type = this.type(obj);\r\n    if (type === 'function' || this.isWindow(obj)) {\r\n      return false;\r\n    }\r\n    var length = !!obj && 'length' in obj && obj.length;\r\n    return type === 'array' || length === 0 || (typeof length === 'number' && length > 0 && (length - 1) in obj);\r\n  };\r\n\r\n  /**\r\n   * 合并数组\r\n   * @param {*} first\r\n   * @param {*} second\r\n   * @returns 返回合并数组\r\n   */\r\n  Utils.prototype.merge = function (first, second) {\r\n    var i = first.length;\r\n    for (var j = 0, len = +second.length; j < len; j++) {\r\n      first[i++] = second[j];\r\n    }\r\n    first.length = i;\r\n    return first;\r\n  };\r\n\r\n  /**\r\n   * 创建数组\r\n   * @param {*} arr\r\n   * @param {*} results\r\n   * @returns 返回创建后的数组\r\n   */\r\n  Utils.prototype.makeArray = function (arr, results) {\r\n    var ret = results || [];\r\n    if (arr != null) {\r\n      if (this.isArrayLike(Object(arr))) {\r\n        this.merge(ret, typeof arr === 'string' ? [arr] : arr);\r\n      } else {\r\n        ret.push(arr);\r\n      }\r\n    }\r\n    return ret;\r\n  };\r\n\r\n  /**\r\n   * 是否为普通对象\r\n   * @param {*} obj\r\n   * @return true or false\r\n   */\r\n  Utils.prototype.isPlainObject = function (obj) {\r\n    if (!obj || this.type(obj) !== 'object' || obj.nodeType || this.isWindow(obj)) {\r\n      return false;\r\n    }\r\n    var hasOwn = Object.prototype.hasOwnProperty;\r\n    if (obj.constructor && !hasOwn.call(obj, 'constructor') &&\r\n      !hasOwn.call(obj.constructor.prototype, 'isPrototypeOf')) {\r\n      return false;\r\n    }\r\n    var key;\r\n    for (key in obj) {\r\n      break; // 对于非普通对象，不要循环N次，提升效率\r\n    }\r\n    return key === undefined || hasOwn.call(obj, key);\r\n  };\r\n\r\n  /**\r\n   * 克隆（深复制）\r\n   * @param {源对象} src\r\n   * @param {目标对象} dest\r\n   * @return 返回深复制后的对象\r\n   */\r\n  Utils.prototype.clone = function (src, dest) {\r\n    return this.extend(true, dest, src);\r\n  };\r\n\r\n  /**\r\n   * 获dom对象的innerText的取值\r\n   * @param {*} ele\r\n   * @return 返回dom对象的innerText\r\n   */\r\n  Utils.prototype.getInnerText = function (ele) {\r\n    // 判断浏览器是否支持innerText\r\n    var text = typeof ele.innerText === 'string' ? ele.innerText : ele.textContent;\r\n    ele = null;\r\n    return text;\r\n  };\r\n  /**\r\n   * 设置dom对象innerText的值\r\n   * @param {*} ele\r\n   * @param {*} text\r\n   */\r\n  Utils.prototype.setInnerText = function (ele, text) {\r\n    if (typeof ele.innerText === 'string') {\r\n      ele.innerText = text;\r\n    } else {\r\n      ele.textContent = text;\r\n    }\r\n    ele = null;\r\n  };\r\n  /**\r\n   * 获取下一个element node\r\n   * 兼容浏览器(获取下一个兄弟元素)\r\n   * @param {*} ele\r\n   * @return 返回下一个兄弟元素\r\n   */\r\n  Utils.prototype.getNextElementSibling = function (ele) {\r\n    var rEle = null;\r\n    if (ele.nextElementSibling) {\r\n      rEle = ele.nextElementSibling;\r\n    } else {\r\n      rEle = ele.nextSibling;\r\n    }\r\n    ele = null;\r\n    return rEle;\r\n  };\r\n\r\n  /**\r\n   * 兼容浏览器 获取第一个子元素\r\n   * @param {*} ele\r\n   * @return 返回第一个子元素\r\n   */\r\n  Utils.prototype.getFirstElementChild = function (ele) {\r\n    var rEle = null;\r\n    if (ele.firstElementChild) {\r\n      rEle = ele.firstElementChild;\r\n    } else {\r\n      rEle = ele.firstChild;\r\n    }\r\n    ele = null;\r\n    return rEle;\r\n  };\r\n\r\n  /**\r\n   * arguments 伪数组转数组\r\n   * @param {*} args\r\n   */\r\n  Utils.prototype.args2Arr = function (args) {\r\n    return args.length === 1 ? [args[0]] : Array.apply(null, args);\r\n  };\r\n\r\n  /**\r\n   * 继承（是否深度拷贝,dest,src1,src2,src3...）\r\n   */\r\n  Utils.prototype.extend = function () {\r\n    var args = core.utils.args2Arr(arguments);\r\n    var target = args[0] || {};\r\n    var i = 1;\r\n    var length = args.length;\r\n    var deep = false;\r\n    // Handle a deep copy situation\r\n    if (typeof target === 'boolean') {\r\n      deep = target;\r\n      // Skip the boolean and the target\r\n      target = args[i] || {};\r\n      i++;\r\n    }\r\n    // Handle case when target is a string or something (possible in deep copy)\r\n    if (typeof target !== 'object' && !this.isFunction(target)) {\r\n      target = {};\r\n    }\r\n    // Extend itself if only one argument is passed\r\n    if (i === length) {\r\n      target = this;\r\n      i--;\r\n    }\r\n    for (; i < length; i++) {\r\n      var options = args[i];\r\n      // Only deal with non-null/undefined values\r\n      if (options == null || options == undefined) {\r\n        continue;\r\n      }\r\n      // Extend the base object\r\n      for (var key in options) {\r\n        var src = target[key];\r\n        var copy = options[key];\r\n        // Prevent never-ending loop\r\n        if (target === copy) {\r\n          continue;\r\n        }\r\n        // Recurse if we're merging plain objects or arrays\r\n        var copyIsArray = false;\r\n        if (deep && copy && (this.isPlainObject(copy) || (copyIsArray = this.isArray(copy)))) {\r\n          var clone = void 0;\r\n          if (copyIsArray) {\r\n            clone = src && this.isArray(src) ? src : [];\r\n          } else {\r\n            clone = src && this.isPlainObject(src) ? src : {};\r\n          }\r\n          // Never move original objects, clone them\r\n          target[key] = this.extend(deep, clone, copy);\r\n          // Don't bring in undefined values\r\n        } else if (copy !== undefined) {\r\n          target[key] = copy;\r\n        }\r\n      }\r\n    }\r\n    // Return the modified object\r\n    return target;\r\n  };\r\n\r\n  /**\r\n   * 循环访问\r\n   * @param target\r\n   * @param callback\r\n   * @param hasOwnProperty\r\n   * @returns {any}\r\n   */\r\n  Utils.prototype.each = function (target, callback, hasOwnProperty) {\r\n    if (this.isArrayLike(target)) {\r\n      for (var i = 0, len = target.length; i < len; i++) {\r\n        if (callback.call(target[i], i, target[i]) === false) {\r\n          break;\r\n        }\r\n      }\r\n    } else {\r\n      for (var key in target) {\r\n        if (hasOwnProperty) {\r\n          if (target.hasOwnProperty(key)) {\r\n            if (callback.call(target[key], key, target[key]) === false) {\r\n              break;\r\n            }\r\n          }\r\n        } else {\r\n          if (callback.call(target[key], key, target[key]) === false) {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return target;\r\n  };\r\n\r\n  /**\r\n   * 存储通用唯一识别码当前自增情况\r\n   */\r\n  Utils.prototype.uidStore = {};\r\n  /**\r\n   * 通用唯一识别码\r\n   * @param {string} idType id类型，默认为UID\r\n   * @param {number} start id起始值，默认为0\r\n   * @param {string} prefix 前缀默认为空\r\n   * @return 返回指定自增序列，带前缀\r\n   */\r\n  Utils.prototype.uid = function (idType, start, prefix) {\r\n    idType = idType || 'UID';\r\n    start = start || 0;\r\n    prefix = prefix || '';\r\n    var id = this.uidStore[idType] || start;\r\n    this.uidStore[idType] = ++id;\r\n    return prefix + id;\r\n  };\r\n  /**\r\n   * DOM ID 识别码，修改使用RT_code固定方式[存在多个时在调用完该方法后处理，添加时间戳]\r\n   * @param {string} prefix 前缀默认为空\r\n   * @param {number} code 编码\r\n   * @return 返回RT_code字符串\r\n   */\r\n  Utils.prototype.uidcode = function (prefix, code) {\r\n    prefix = prefix || '';\r\n    return prefix + code;\r\n  };\r\n\r\n  /**\r\n   * 导出工具类对象\r\n   */\r\n  core.utils = new Utils();\r\n}(yufp.core, yufp));\r\n\r\n/**\r\n * /src/core/utils.js\r\n * @created by jiangcheng 2017-12-20\r\n * @updated by helin3 2018-08-09\r\n * @description core-bus 数据篮子\r\n */\r\n(function (core, yufp) {\r\n  /**\r\n   * 数据篮子结点\r\n   * @param {*} id\r\n   */\r\n  var TreeNode = function (id) {\r\n    this.id = id;\r\n    this.children = {};\r\n  };\r\n\r\n  /**\r\n   * 数据篮子对象\r\n   */\r\n  var Bus = function () {\r\n    this.root = new TreeNode('_root_');\r\n  };\r\n\r\n  /**\r\n   * 加入数据\r\n   * @param args\r\n   * @returns {boolean}\r\n   */\r\n  Bus.prototype.put = function () {\r\n    var args = core.utils.args2Arr(arguments);\r\n    // 获取参数长度\r\n    var argLen = args.length;\r\n    // 参数至少必须有一个key和value\r\n    if (argLen < 2) {\r\n      core.logger.error('core.bus: The parameter includes at least one (key,value)');\r\n      return false;\r\n    }\r\n    // 当前节点\r\n    var node = this.root;\r\n    for (var i = 0; i < argLen - 1; i++) {\r\n      var name = args[i];\r\n      if (!node.children[name]) {\r\n        node.children[name] = new TreeNode(name);\r\n      }\r\n      node = node.children[name];\r\n    }\r\n    // 保存数据\r\n    node.data = args[argLen - 1];\r\n    // 返回操作成功标志\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * 获取内容\r\n   * @param args\r\n   * @returns {any}\r\n   */\r\n  Bus.prototype.get = function () {\r\n    var args = core.utils.args2Arr(arguments);\r\n    // 获取参数长度\r\n    var argLen = args.length;\r\n    if (argLen == 0) {\r\n      return undefined;\r\n    }\r\n    // 当前节点\r\n    var node = this.root;\r\n    for (var i = 0; i < argLen; i++) {\r\n      var name = args[i];\r\n      if (node.children[name]) {\r\n        node = node.children[name];\r\n      } else {\r\n        return undefined;\r\n      }\r\n    }\r\n    return node.data;\r\n  };\r\n\r\n  /**\r\n   * 移除数据\r\n   * @param args\r\n   * @returns {any}\r\n   */\r\n  Bus.prototype.remove = function () {\r\n    var args = core.utils.args2Arr(arguments);\r\n    // 获取参数长度\r\n    var argLen = args.length;\r\n    if (argLen == 0) {\r\n      return false;\r\n    }\r\n    // 当前节点\r\n    var node = this.root;\r\n    for (var i = 0; i < argLen - 1; i++) {\r\n      var name = args[i];\r\n      if (node.children[name]) {\r\n        node = node.children[name];\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    var name = args[argLen - 1];\r\n    // 如果找到对应的数据,则删除\r\n    if (node.children[name]) {\r\n      delete node.children[name];\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * 导出bus数据篮子\r\n   */\r\n  core.bus = new Bus();\r\n}(yufp.core, yufp));\n/**\r\n * /src/core/logger.js\r\n * @created by jiangcheng 2017-12-20\r\n * @updated by helin3 2018-08-09\r\n * @description core-logger 日志对象\r\n */\r\n(function (core, yufp) {\r\n  /**\r\n   * 构建Logger日志对象\r\n   * @constructor\r\n   */\r\n  function Logger () {\r\n    this.fn = window.console;\r\n    this.fn.debug = this.fn.debug ? this.fn.debug : this.fn.info;\r\n    this.configLevel();\r\n  };\r\n  /**\r\n   * 配置日志打印级别\r\n   * @param {*} options\r\n   */\r\n  Logger.prototype.configLevel = function (options) {\r\n    options = options || {\r\n      needInfo: true,\r\n      needDebug: true,\r\n      needwarn: true,\r\n      needError: true\r\n    };\r\n    // 在ie9中，不支持console.log.apply方式调用,增加判断是否字符串形式打印信息\r\n    options['isStrprint'] = typeof window.console.log.apply === 'undefined';\r\n    core.utils.extend(this, options);\r\n  };\r\n  /**\r\n   * 输出信息到控制台,根据参数type调用不同的打印方式,将待打印信息拼接成字符串\r\n   * @param {String} type : info/debug/warn/error\r\n   * @description 其他参数通过隐藏arguments传递\r\n   */\r\n  Logger.prototype._print = function (type) {\r\n    // 在ie10上，使用apply(null,[])会报调用的对象无效错误,null可以替换成window.console\r\n    this.fn && this.fn[type] && (this.isStrprint ? this.fn[type](core.utils.args2Arr(arguments[1]).join(' ')) : this.fn[type].apply(this.fn, arguments[1]));\r\n  };\r\n  /**\r\n   * 控制台输出INFO级别日志\r\n   */\r\n  Logger.prototype.info = function () {\r\n    if (!this.needInfo || !this.fn) {\r\n      return;\r\n    }\r\n    this._print('info', arguments);\r\n  };\r\n\r\n  /**\r\n   * 控制台输出DEBUG级别日志\r\n   */\r\n  Logger.prototype.debug = function () {\r\n    if (!this.needDebug || !this.fn) {\r\n      return;\r\n    }\r\n    this._print('debug', arguments);\r\n  };\r\n\r\n  /**\r\n   * 控制台输出WARN级别日志\r\n   */\r\n  Logger.prototype.warn = function () {\r\n    if (!this.needwarn || !this.fn) {\r\n      return;\r\n    }\r\n    this._print('warn', arguments);\r\n  };\r\n\r\n  /**\r\n   * 控制台输出ERROR级别日志\r\n   */\r\n  Logger.prototype.error = function () {\r\n    if (!this.needError || !this.fn) {\r\n      return;\r\n    }\r\n    this._print('error', arguments);\r\n  };\r\n\r\n  /**\r\n   * 导出Logger日志对象\r\n   */\r\n  core.logger = new Logger();\r\n}(yufp.core, yufp));\n/**\r\n * /src/core/ajax.js\r\n * @created by jiangcheng 2017-12-20\r\n * @updated by helin3 2018-08-09\r\n * @description core-ajax (Asynchronous JavaScript and XML)\r\n */\r\n(function (core, yufp) {\r\n  /**\r\n   * 构建AJAX对象\r\n   * @constructor\r\n   */\r\n  function Ajax (args) {\r\n    var _this = this;\r\n    var xhr = _this.createXHR();\r\n    if (!xhr) {\r\n      core.logger.error('core.ajax: Your browser not support AJAX XMLHttpRequest.');\r\n      return;\r\n    }\r\n    var setting = {};\r\n    core.utils.extend(true, setting, _this.defaultSetting);\r\n    core.utils.extend(true, setting, args);\r\n    args = setting;\r\n    // 异步请求、超时设置\r\n    _this.asyncTimeout(args, xhr);\r\n    // 指定ready state change事件句柄对应的函数\r\n    _this.onreadystatechange(args, xhr);\r\n    var method = args.type.toUpperCase();\r\n    var reqData = _this.processData(args, method);\r\n    // 初始化HTTP请求参数\r\n    args.url += method == 'GET' && reqData ? (args.url.indexOf('?') === -1 ? '?' : '&') + reqData : '';\r\n\r\n    xhr.open(args.type, encodeURI(args.url), args.async);\r\n    xhr.withCredentials = true;\r\n\r\n    if (core.utils.type(args.beforeSend) == 'function') {\r\n      // 克隆数据\r\n      var cloneArgs = {};\r\n      core.utils.extend(true, cloneArgs, args);\r\n      args.beforeSend.call(_this, xhr, cloneArgs);\r\n    }\r\n    // 设置缓存策略\r\n    if (!args.cache) {\r\n      xhr.setRequestHeader('Cache-Control', 'no-cache');\r\n    }\r\n    // 设置请求头\r\n    if (typeof args.headers === 'object') {\r\n      for (var key in args.headers) {\r\n        xhr.setRequestHeader(key, args.headers[key]);\r\n      }\r\n    }\r\n    try {\r\n      // 发送数据\r\n      xhr.send(method != 'GET' && reqData ? reqData : null);\r\n    } catch (ex) {\r\n      if (args.error) {\r\n        args.error(xhr, ex.message);\r\n      }\r\n      // 完成处理\r\n      if (args.complete) {\r\n        args.complete(xhr, ex.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n  * 默认配置\r\n  * @type {{type: string, async: boolean, contentType: string, dataType: string, cache: boolean, timeout: number, processData: boolean}}\r\n  */\r\n  Ajax.prototype.defaultSetting = {\r\n    // 请求类型\r\n    type: 'GET',\r\n    // 是否异步\r\n    async: true,\r\n    // 内容类型\r\n    contentType: 'application/x-www-form-urlencoded; charset=UTF-8',\r\n    // 数据类型\r\n    dataType: 'string',\r\n    // 是否缓存\r\n    cache: false,\r\n    // 超时时间\r\n    timeout: 90000,\r\n    // 是否处理数据\r\n    processData: true\r\n  };\r\n\r\n  /**\r\n   * 加载处理请求数据\r\n   * @param {*} args\r\n   * @param {*} method\r\n   */\r\n  Ajax.prototype.processData = function (args, method) {\r\n    var reqData = null;\r\n    try {\r\n      if (args.data && args.processData && typeof args.data !== 'string') {\r\n        reqData = this.encode(args.data, method == 'GET' ? 'application/x-www-form-urlencoded' : args.headers['Content-Type']);\r\n      } else {\r\n        reqData = args.data;\r\n      }\r\n    } catch (ex) {\r\n      core.logger.error('core.ajax: Request params format error；' + ex.Message, ex);\r\n    }\r\n    return reqData;\r\n  };\r\n\r\n  /**\r\n   * 处理响应数据\r\n   * @param {*} args\r\n   * @param {*} xhr\r\n   */\r\n  Ajax.prototype.onreadystatechange = function (args, xhr) {\r\n    var _this = this;\r\n    xhr.onreadystatechange = function () {\r\n      try {\r\n        if (xhr.readyState < 4) {\r\n          if (args.loading) {\r\n            args.loading(xhr.readyState);\r\n          }\r\n          return;\r\n        }\r\n        if (args.success && (xhr.status == 0 || (xhr.status >= 200 && xhr.status < 300))) {\r\n          var rspData = xhr.response == undefined ? xhr.responseText : xhr.response;\r\n          if (xhr.status === 0 && !rspData) {\r\n            // 失败回调\r\n            args.error && args.error(xhr, '网络请求异常');\r\n            return;\r\n          } else {\r\n            try {\r\n              rspData = _this.decode(rspData, args.dataType); // 解码数据\r\n            } catch (ex) {\r\n              // 失败回调\r\n              args.error && args.error(xhr, ex.message);\r\n              return;\r\n            }\r\n          }\r\n          // 成功回调\r\n          args.success(rspData, xhr.status, xhr);\r\n        } else if (args.error) {\r\n          args.error(xhr, xhr.status);\r\n        }\r\n        // 完成处理\r\n        if (args.complete) {\r\n          args.complete(xhr, xhr.status);\r\n        }\r\n      } catch (e) {\r\n        throw e;\r\n      }\r\n    };\r\n  };\r\n\r\n  /**\r\n   * 处理异步请求超时\r\n   * @param {*} args\r\n   * @param {*} xhr\r\n   */\r\n  Ajax.prototype.asyncTimeout = function (args, xhr) {\r\n    if (!args.async) {\r\n      return;\r\n    }\r\n    // 防止IE导致的问题\r\n    try {\r\n      xhr.timeout = args.timeout;\r\n      xhr.ontimeout = function () {\r\n        // 超时处理\r\n        if (args.error) {\r\n          args.error(xhr, 'timeout');\r\n        }\r\n        // 完成处理\r\n        if (args.complete) {\r\n          args.complete(xhr, 'timeout');\r\n        }\r\n        xhr = null;\r\n        args = null;\r\n      };\r\n    } catch (ex) {\r\n      core.logger.warn('core.ajax: ie timeout, ' + ex.Message, ex);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 创建xml http request对象\r\n   * @returns xhr\r\n   */\r\n  Ajax.prototype.createXHR = function () {\r\n    var xhr;\r\n    try {\r\n      xhr = new XMLHttpRequest();\r\n    } catch (e) {\r\n      var IEXHRVers = ['Msxml3.XMLHTTP', 'Msxml2.XMLHTTP', 'Microsoft.XMLHTTP'];\r\n      for (var i = 0, len = IEXHRVers.length; i < len; i++) {\r\n        try {\r\n          xhr = new window.ActiveXObject(IEXHRVers[i]);\r\n          break; // 按IE版本创建xml http request对象\r\n        } catch (e) {\r\n          continue;\r\n        }\r\n      }\r\n    }\r\n    return xhr;\r\n  };\r\n\r\n  /**\r\n   * 编码数据\r\n   * @param {*} data 待编码数据\r\n   * @param {*} contentType 编码类型\r\n   */\r\n  Ajax.prototype.encode = function (data, contentType) {\r\n    if (!data || typeof data === 'string' || !contentType) {\r\n      return data;\r\n    }\r\n    contentType = contentType.toLowerCase();\r\n    var res = '';\r\n    var ct = 'application/x-www-form-urlencoded';\r\n    var isObj = core.utils.type(data) == 'object';\r\n    if (contentType.indexOf(ct) > -1) {\r\n      // 对象转换为form提交格式\r\n      if (isObj) {\r\n        for (var key in data) {\r\n          var value = data[key];\r\n          // 获取value数据类型\r\n          var valType = core.utils.type(value);\r\n          if (valType == 'array') {\r\n            for (var i = 0; i < value.length; i++) {\r\n              var item = key + '=' + value[i];\r\n              if (res.length > 0) {\r\n                res += '&';\r\n              }\r\n              res += item;\r\n            }\r\n          } else {\r\n            var item = key + '=' + value;\r\n            if (res.length > 0) {\r\n              res += '&';\r\n            }\r\n            res += item;\r\n          }\r\n        }\r\n      } else {\r\n        res = data;\r\n      }\r\n    } else if (contentType.indexOf('application/json') > -1 || contentType.indexOf('text') == 0) {\r\n      if (isObj) {\r\n        res = JSON.stringify(data);\r\n      }\r\n    } else {\r\n      if (isObj) {\r\n        res = JSON.stringify(data);\r\n      } else {\r\n        res = data;\r\n      }\r\n    }\r\n    return res;\r\n  };\r\n\r\n  /**\r\n   * 解码数据\r\n   * @param {*} data\r\n   * @param {*} dataType\r\n   */\r\n  Ajax.prototype.decode = function (data, dataType) {\r\n    if (dataType == 'json') {\r\n      if (core.utils.type(data) == 'string' && data != '') {\r\n        try {\r\n          data = JSON.parse(data);\r\n        } catch (e) {\r\n          core.logger.error('core.ajax: Response text format error ', e);\r\n          throw e;\r\n        }\r\n      }\r\n    }\r\n    return data;\r\n  };\r\n\r\n  /**\r\n   * 导出ajax对象\r\n   */\r\n  core.ajax = function (args) {\r\n    /* eslint no-new: 0 */\r\n    new Ajax(args);\r\n  };\r\n}(yufp.core, yufp));\r\n\n/**\r\n * /src/core/deferred.js\r\n * @created by jiangcheng 2017-12-20\r\n * @updated by helin3 2018-08-09\r\n * @description core-deferred 日志对象\r\n */\r\n(function (core, yufp) {\r\n  /**\r\n   * 构建延期对象状态\r\n   */\r\n  var DEFERRED_STATUS = {};\r\n  (function (status) {\r\n    status[status['Running'] = 0] = 'Running';\r\n    status[status['Done'] = 1] = 'Done';\r\n    status[status['Fail'] = 2] = 'Fail';\r\n  }(DEFERRED_STATUS));\r\n\r\n  /**\r\n   * 构建延期/延缓对象\r\n   */\r\n  function Deferred () {\r\n    /**\r\n     * 成功函数\r\n     */\r\n    this.doneFns = [];\r\n    /**\r\n     * 失败函数\r\n     */\r\n    this.failFns = [];\r\n    /**\r\n     * always函数\r\n     */\r\n    this.alwaysFns = [];\r\n    /*\r\n     * 运行状态\r\n     */\r\n    this.status = DEFERRED_STATUS.Running;\r\n  };\r\n\r\n  /**\r\n   * fire\r\n   */\r\n  Deferred.prototype.fire = function () {\r\n    if (this.status == DEFERRED_STATUS.Running) {\r\n      return;\r\n    }\r\n    if (this.alwaysFns) {\r\n      while (this.alwaysFns.length > 0) {\r\n        var fn = this.alwaysFns.shift();\r\n        fn.apply(this, this.args);\r\n      }\r\n    }\r\n    if (this.status == DEFERRED_STATUS.Done) {\r\n      while (this.doneFns.length > 0) {\r\n        var fn = this.doneFns.shift();\r\n        fn.apply(this, this.args);\r\n      }\r\n    } else if (this.status == DEFERRED_STATUS.Fail) {\r\n      while (this.failFns.length > 0) {\r\n        var fn = this.failFns.shift();\r\n        fn.apply(this, this.args);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 注册成功函数\r\n   * @param fn\r\n   */\r\n  Deferred.prototype.done = function (fn) {\r\n    this.doneFns.push(fn);\r\n    this.fire();\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * 注册失败函数\r\n   * @param fn\r\n   */\r\n  Deferred.prototype.fail = function (fn) {\r\n    this.failFns.push(fn);\r\n    this.fire();\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * 注册always函数\r\n   * @param fn\r\n   */\r\n  Deferred.prototype.always = function (fn) {\r\n    this.alwaysFns.push(fn);\r\n    this.fire();\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * 成功\r\n   * @param params\r\n   */\r\n  Deferred.prototype.resolve = function () {\r\n    this.args = core.utils.args2Arr(arguments);\r\n    this.status = DEFERRED_STATUS.Done;\r\n    this.fire();\r\n    return this;\r\n  };\r\n  /**\r\n   * 拒绝\r\n   * @param params\r\n   */\r\n  Deferred.prototype.reject = function () {\r\n    this.args = core.utils.args2Arr(arguments);\r\n    this.status = DEFERRED_STATUS.Fail;\r\n    this.fire();\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * 导出延期对象\r\n   */\r\n  core.Deferred = Deferred;\r\n}(yufp.core, yufp));\n/**\r\n * /src/core/event.js\r\n * @created by jiangcheng 2017-12-20\r\n * @updated by helin3 2018-08-09\r\n * @description core-EventChain 事件链路\r\n */\r\n(function (core, yufp) {\r\n  /**\r\n   * 构建事件链路对象状态\r\n   */\r\n  var EVENT_CHAIN_STATUS = {};\r\n  (function (status) {\r\n    status.Busy = 'busy';\r\n    status.Free = 'free';\r\n  }(EVENT_CHAIN_STATUS));\r\n\r\n  /**\r\n   * 构建事件链路对象\r\n   */\r\n  function EventChain () {\r\n    /**\r\n     * 等待函数\r\n     */\r\n    this.waitFns = [];\r\n    this.chain = [];\r\n    this.status = EVENT_CHAIN_STATUS.Free;\r\n  };\r\n\r\n  /**\r\n   * 触发链路中的下一个事件\r\n   */\r\n  EventChain.prototype.fire = function () {\r\n    // 更新参数\r\n    this.args = core.utils.args2Arr(arguments);\r\n    // 设置状态为空闲\r\n    if (this.chain.length == 0) {\r\n      // 判断是否有等待回调函数\r\n      while (this.waitFns.length > 0) {\r\n        var fn = this.waitFns.shift();\r\n        // 触发wait函数\r\n        fn.apply(this, this.args);\r\n      }\r\n      this.status = EVENT_CHAIN_STATUS.Free;\r\n      return;\r\n    }\r\n    // 设置状态为繁忙\r\n    this.status = EVENT_CHAIN_STATUS.Busy;\r\n    if (this.chain.length > 0) {\r\n      // 获取队列的第一个元素\r\n      var task = this.chain.shift();\r\n      // 触发下一个任务\r\n      try {\r\n        task.apply(this, this.args);\r\n      } catch (e) {\r\n        core.logger.error('core.EventChain: ' + e);\r\n        this.fire();\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 结束事件链调用，直接触发wait函数\r\n   */\r\n  EventChain.prototype.reject = function () {\r\n    this.args = core.utils.args2Arr(arguments);\r\n    // 设置busy状态\r\n    this.status = EVENT_CHAIN_STATUS.Busy;\r\n    // 清空事件队列\r\n    this.chain = [];\r\n    // 判断是否有等待回调函数\r\n    while (this.waitFns.length > 0) {\r\n      var fn = this.waitFns.shift();\r\n      // 触发wait函数\r\n      fn.apply(this, this.args);\r\n    }\r\n    // 设置空闲状态\r\n    this.status = EVENT_CHAIN_STATUS.Free;\r\n  };\r\n\r\n  /**\r\n   * 加入任务\r\n   * @param task\r\n   * @returns {yufp.core.TaskChain}\r\n   */\r\n  EventChain.prototype.post = function (task) {\r\n    if (core.utils.type(task) == 'array') {\r\n      // 加入事件队列(数组)\r\n      this.chain = [].concat(this.chain, task);\r\n    } else {\r\n      // 加入事件队列(单元素)\r\n      this.chain.push(task);\r\n    }\r\n    // 如果状态处于busy状态,则不进行处理，直接返回\r\n    if (this.status == EVENT_CHAIN_STATUS.Busy) {\r\n      return this;\r\n    }\r\n    // 如果状态处于free状态，则执行任务\r\n    this.fire(this.args);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * 加入等待任务\r\n   * @param task\r\n   * @returns {yufp.core.EventChain}\r\n   */\r\n  EventChain.prototype.wait = function (task) {\r\n    // 保存wait回调函数\r\n    this.waitFns.push(task);\r\n    // 如果状态处于busy状态,则不进行处理，直接返回\r\n    if (this.status == EVENT_CHAIN_STATUS.Busy) {\r\n      return this;\r\n    }\r\n    // 触发事件链，继续执行\r\n    this.fire(this.args);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * 判断事件链是否已经执行完成\r\n   * @returns {boolean}\r\n   */\r\n  EventChain.prototype.isFinish = function () {\r\n    if (this.status == EVENT_CHAIN_STATUS.Free && this.chain.length == 0) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * 导出事件链对象\r\n   */\r\n  core.EventChain = EventChain;\r\n}(yufp.core, yufp));\r\n\r\n/**\r\n * /src/core/event.js\r\n * @created by jiangcheng 2017-12-20\r\n * @updated by helin3 2018-08-09\r\n * @description core-EventProxy 事件链路\r\n */\r\n(function (core, yufp) {\r\n  /**\r\n   * 构建事件代理对象状态\r\n   */\r\n  var Policy = {};\r\n  (function (policy) {\r\n    policy[policy['limitless'] = 0] = 'limitless';\r\n    policy[policy['once'] = 1] = 'once';\r\n  }(Policy));\r\n\r\n  /**\r\n   * 构建事件代理对象\r\n   */\r\n  function EventProxy () {\r\n    /**\r\n     * 注册表\r\n     */\r\n    this.register = {};\r\n  };\r\n\r\n  /**\r\n   * 绑定事件\r\n   * @param key\r\n   * @param callback\r\n   * @param once\r\n   * @returns {yufp.core.EventProxy}\r\n   */\r\n  EventProxy.prototype.bind = function (key, callback, once) {\r\n    // 尝试从注册表中获取\r\n    var queue = this.register[key];\r\n    if (!queue) {\r\n      // 创建空队列\r\n      queue = [];\r\n      // 加入记录\r\n      this.register[key] = queue;\r\n    }\r\n    var policy = once == true ? Policy.once : Policy.limitless;\r\n    var node = {\r\n      policy: policy,\r\n      callback: callback\r\n    };\r\n    // 加入队列\r\n    queue.push(node);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * 解除绑定\r\n   * @param key\r\n   */\r\n  EventProxy.prototype.unbind = function (key) {\r\n    // 移除\r\n    delete this.register[key];\r\n  };\r\n\r\n  /**\r\n   * 绑定一次性触发函数\r\n   * @param key\r\n   * @param callback\r\n   */\r\n  EventProxy.prototype.once = function (key, callback) {\r\n    return this.bind(key, callback, true);\r\n  };\r\n\r\n  /**\r\n   * 绑定多条件触发函数\r\n   * @param args\r\n   */\r\n  EventProxy.prototype.all = function () {\r\n    var _this = this;\r\n    var args = core.utils.args2Arr(arguments);\r\n    var len = args.length;\r\n    if (len < 1) {\r\n      return;\r\n    }\r\n    // 获取callback\r\n    var callback = args[len - 1];\r\n    if (!core.utils.isFunction(callback)) {\r\n      core.logger.error('core.EventProxy: callback can not benn empty');\r\n      return;\r\n    }\r\n    // 记录未触发次数\r\n    var remaining = len - 1;\r\n    // 记录已经触发的值\r\n    var values = new Array(remaining);\r\n    // 获取条件数组\r\n    var keys = [].splice.call(args, 0, remaining);\r\n    for (var i = 0; i < keys.length; i++) {\r\n      _this.once(keys[i], function (value) {\r\n        values[i] = value;\r\n        remaining -= 1;\r\n        // 判断是否具备触发条件\r\n        if (remaining == 0) {\r\n          callback.apply(_this, values);\r\n        }\r\n      });\r\n    }\r\n    values = null;\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * 触发函数\r\n   * @param key\r\n   * @param value\r\n   */\r\n  EventProxy.prototype.trigger = function (key) {\r\n    var value = core.utils.args2Arr(arguments);\r\n    // 获取callback记录\r\n    var queue = this.register[key];\r\n    // 判断是否找到记录\r\n    if (!queue) {\r\n      return;\r\n    }\r\n    for (var i = 0; i < queue.length; i++) {\r\n      // 获取记录\r\n      var node = queue[i];\r\n      if (node.policy == Policy.once) {\r\n        queue.slice(i, 1);\r\n      }\r\n      if (node.callback) {\r\n        try {\r\n          // 触发函数\r\n          node.callback.apply(this, value);\r\n        } catch (ex) {\r\n          core.logger.error('core.EventProxy: ', ex.message, ex);\r\n        }\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * 触发函数(别名)\r\n   * @param key\r\n   * @param value\r\n   * @returns {EventProxy}\r\n   */\r\n  EventProxy.prototype.emit = function (key) {\r\n    var value = core.utils.args2Arr(arguments);\r\n    return this.trigger(key, value);\r\n  };\r\n\r\n  /**\r\n   * 导出事件代理对象\r\n   */\r\n  core.EventProxy = EventProxy;\r\n}(yufp.core, yufp));\n/**\r\n * /src/core/require.js\r\n * @created by jiangcheng 2017-12-20\r\n * @updated by helin3 2018-08-09\r\n * @description core-Module 构建Module对象\r\n */\r\n(function (core, yufp) {\r\n  var ModuleStatus = {};\r\n  (function (ModuleStatus) {\r\n    /**\r\n     * 加载中\r\n     */\r\n    ModuleStatus[ModuleStatus['Loading'] = 0] = 'Loading';\r\n    /**\r\n     * 加载完成\r\n     */\r\n    ModuleStatus[ModuleStatus['Loaded'] = 1] = 'Loaded';\r\n    /**\r\n     * 定义中状态\r\n     */\r\n    ModuleStatus[ModuleStatus['Defining'] = 2] = 'Defining';\r\n    /**\r\n     * 定义完成状态\r\n     */\r\n    ModuleStatus[ModuleStatus['Defined'] = 3] = 'Defined';\r\n    /**\r\n     * 定义文件是否被加载完成（执行类似onload方法 ，js 时使用）\r\n     */\r\n    ModuleStatus['LoadFinish'] = false;\r\n  }(ModuleStatus));\r\n  core.ModuleStatus = ModuleStatus;\r\n\r\n  /**\r\n   * 模块对象\r\n   * @constructor\r\n   */\r\n  function Module () {\r\n  };\r\n\r\n  /**\r\n   * 模块管理器\r\n   */\r\n  function Modules () {\r\n    this.register = {};\r\n  };\r\n\r\n  /**\r\n   * 获取模块\r\n   * @param path\r\n   * @returns {any}\r\n   */\r\n  Modules.prototype.get = function (path) {\r\n    return this.register[path];\r\n  };\r\n  /**\r\n   * 加入模块\r\n   * @param path\r\n   * @param module\r\n   */\r\n  Modules.prototype.put = function (path, module) {\r\n    this.register[path] = module;\r\n  };\r\n  /**\r\n   * 移除模块\r\n   * @param path\r\n   * @returns\r\n   */\r\n  Modules.prototype.remove = function (path) {\r\n    var module = this.register[path];\r\n    delete this.register[path];\r\n    return module;\r\n  };\r\n  /**\r\n   * 判断模块是否存在\r\n   * @param path\r\n   */\r\n  Modules.prototype.contains = function (path) {\r\n    if (this.register[path]) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * 清空模块\r\n   */\r\n  Modules.prototype.clear = function () {\r\n    this.register = {};\r\n  };\r\n\r\n  /**\r\n   * 导出模块对象\r\n   */\r\n  core.Module = Module;\r\n  /**\r\n   * 导出模块管理器\r\n   */\r\n  core.Modules = Modules;\r\n}(yufp.core, yufp));\r\n// Modules\r\n\r\n/**\r\n * /src/core/require.js\r\n * @created by jiangcheng 2017-12-20\r\n * @updated by helin3 2018-08-09\r\n * @description core-Resource 构建资源对象\r\n */\r\n(function (core, yufp) {\r\n  /**\r\n   * 构建资源对象\r\n   * @constructor\r\n   */\r\n  function Resource () {\r\n    // 初始化缓存\r\n    this.cache = {};\r\n  };\r\n\r\n  /**\r\n   * 请求资源方法\r\n   * @param {*} url 请求URL\r\n   * @param {*} timeout 超时时间\r\n   * @param {*} callback 回调方法\r\n   * @param {*} debug 是否调试模式\r\n   */\r\n  Resource.prototype.get = function (url, timeout, callback, debug) {\r\n    var _this = this;\r\n    // 判断缓存中是否存在数据\r\n    if (debug === false && _this.cache[url]) {\r\n      var data = _this.cache[url];\r\n      callback.call(_this, 0, data);\r\n      return;\r\n    }\r\n    // 发起ajax请求\r\n    core.ajax({\r\n      url: url,\r\n      timeout: timeout,\r\n      type: 'GET',\r\n      cache: false,\r\n      async: true,\r\n      data: {},\r\n      success: function (data, status, xhr) {\r\n        _this.cache[url] = data;\r\n        callback(0, data);\r\n      },\r\n      error: function (xhr, status) {\r\n        callback(1, status);\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * 导出资源对象\r\n   */\r\n  core.Resource = Resource;\r\n}(yufp.core, yufp));\r\n\r\n/**\r\n * /src/core/require.js\r\n * @created by jiangcheng 2017-12-20\r\n * @updated by helin3 2018-08-09\r\n * @description core-Resource 构建Require对象\r\n */\r\n(function (core, yufp) {\r\n  /**\r\n   * 构建事件链路对象状态\r\n   */\r\n  var REQUIRE_STATUS = {};\r\n  (function (status) {\r\n    status[status['Busy'] = 0] = 'busy';\r\n    status[status['Free'] = 1] = 'free';\r\n  }(REQUIRE_STATUS));\r\n\r\n  /**\r\n   * 进程\r\n   * @constructor\r\n   */\r\n  var Progress = function (n, fn) {\r\n    this.size = n;\r\n    this.callback = fn;\r\n    this.status = true;\r\n    this.values = [];\r\n    this.lastIndex = -1;\r\n  };\r\n\r\n  /**\r\n   * work\r\n   * @param flag\r\n   * @param index\r\n   * @param value\r\n   */\r\n  Progress.prototype.work = function (flag, index, value) {\r\n    this.status = flag;\r\n    if (this.status == true) {\r\n      // 如何index不一样才更新size\r\n      if (this.lastIndex != index) {\r\n        // 设置工作量完成度\r\n        this.size--;\r\n      }\r\n      // 更新last index\r\n      this.lastIndex = index;\r\n      // 保存值\r\n      this.values.push(value);\r\n    }\r\n    if (this.size == 0 || this.status == false) {\r\n      // 调用回调函数\r\n      try {\r\n        this.callback(this.status, this.values);\r\n      } catch (ex) {\r\n        // 打印日志\r\n        core.logger.error('core.require: ', ex.Message, ex);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 判断进程是否为正常状态\r\n   * @returns {boolean}\r\n   */\r\n  Progress.prototype.isOK = function () {\r\n    return this.status;\r\n  };\r\n\r\n  /**\r\n   * 构造函数\r\n   * @constructor\r\n   * @param index\r\n   * @param src\r\n   * @param params\r\n   * @param progress\r\n   */\r\n  var TaskNode = function (index, src, params, progress) {\r\n    this.index = index;\r\n    this.src = src;\r\n    this.params = params;\r\n    this.progress = progress;\r\n  };\r\n\r\n  /**\r\n   * 检查css是否已经加载\r\n   * @param node\r\n   * @param meta\r\n   */\r\n  var checkCss = function (node, meta) {\r\n    var sheet = node.sheet;\r\n    var isLoaded;\r\n    // for WebKit < 536\r\n    if (meta.isOldWebKit) {\r\n      if (sheet) {\r\n        isLoaded = true;\r\n      }\r\n    } else if (sheet) {\r\n      try {\r\n        if (sheet.cssRules) {\r\n          isLoaded = true;\r\n        }\r\n      } catch (ex) {\r\n        // The value of `ex.name` is changed from 'NS_ERROR_DOM_SECURITY_ERR'\r\n        // to 'SecurityError' since Firefox 13.0. But Firefox is less than 9.0\r\n        // in here, So it is ok to just rely on 'NS_ERROR_DOM_SECURITY_ERR'\r\n        if (ex.name === 'NS_ERROR_DOM_SECURITY_ERR') {\r\n          isLoaded = true;\r\n        }\r\n      }\r\n    }\r\n    setTimeout(function () {\r\n      meta.time += 20;\r\n      if (isLoaded) {\r\n        meta.success();\r\n      } else if (meta.time > meta.timeout) {\r\n        meta.error();\r\n      } else {\r\n        checkCss(node, meta);\r\n      }\r\n      node = null;\r\n      meta = null;\r\n    }, 20);\r\n  };\r\n\r\n  /**\r\n   * 构造函数\r\n   */\r\n  var Require = function () {\r\n    // 获取window\r\n    this.win = window;\r\n    // 获取document\r\n    this.doc = document;\r\n    // 获取head\r\n    this.head = this.doc.head || this.doc.getElementsByTagName('head')[0] || this.doc.documentElement;\r\n    // 判断是否为老的webkit浏览器\r\n    this.isOldWebKit = +navigator.userAgent.replace(/.*(?:AppleWebKit|AndroidWebKit)\\/(\\d+).*/, '$1') < 536;\r\n    // 路径简称配置\r\n    this.paths = {};\r\n    // 别名配置\r\n    this.alias = {};\r\n    // 根路径\r\n    this.base = '';\r\n    // 字符编码\r\n    this.charset = 'UTF-8';\r\n    // 超时\r\n    this.timeout = -1;\r\n    // 模块管理器\r\n    this.modules = new core.Modules();\r\n    // 资源管理器\r\n    this.resource = new core.Resource();\r\n    // 任务队列\r\n    this.queue = [];\r\n    // 空闲状态\r\n    this.status = REQUIRE_STATUS.Free;\r\n    // 模块版本\r\n    this.version = '1.0.0';\r\n    // debug模式\r\n    this.debug = false;\r\n  };\r\n\r\n  /**\r\n   * 配置静态参数，用于初始化\r\n   * @param setting\r\n   * @returns {yufp.core.Require}\r\n   */\r\n  Require.prototype.config = function (setting) {\r\n    if (!setting) {\r\n      return;\r\n    }\r\n    // 设置路径映射\r\n    this.paths = setting.paths ? core.utils.extend({}, setting.paths) : this.paths;\r\n    // 设置别名\r\n    this.alias = setting.alias ? core.utils.clone({}, setting.alias) : this.alias;\r\n    // 设置是base路径\r\n    if (setting.base != undefined) {\r\n      this.base = setting.base;\r\n    }\r\n    // 设置请求编码\r\n    if (setting.charset != undefined) {\r\n      this.charset = setting.charset;\r\n    }\r\n    // 设置版本号\r\n    if (setting.version != undefined) {\r\n      this.version = setting.version;\r\n    }\r\n    // 设置debug模式\r\n    if (setting.debug != undefined) {\r\n      this.debug = setting.debug;\r\n    }\r\n    // 设置当前环境\r\n    if (setting.runEnv != undefined) {\r\n      // 当前环境\r\n      this.runEnv = setting.runEnv;\r\n    }\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * 获取资源\r\n   * @param url\r\n   * @param callback\r\n   * @returns {yufp.core.Require}\r\n   */\r\n  Require.prototype.get = function (url, callback, options) {\r\n    // 解析路径\r\n    url = this.resolvePath(url);\r\n    var timeout = this.timeout;\r\n    if (options && options.timeout) {\r\n      timeout = options.timeout;\r\n    }\r\n    this.resource.get(url, timeout, callback, this.debug);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * 加载资源\r\n   * @param args\r\n   */\r\n  Require.prototype.use = function () {\r\n    return this.require.apply(this, core.utils.args2Arr(arguments));\r\n  };\r\n  /**\r\n   * 加载资源\r\n   * @param args\r\n   */\r\n  Require.prototype.require = function () {\r\n    var _this = this;\r\n    var args = core.utils.args2Arr(arguments);\r\n    // 定义参数\r\n    var libs = [], options, callback, len;\r\n    len = args.length;\r\n    // 获取运行参数\r\n    options = {};\r\n    if (core.utils.type(args[len - 1]) == 'object') {\r\n      core.utils.extend(true, options, args[len - 1]);\r\n      len--;\r\n    }\r\n    // 获取回调函数\r\n    if (core.utils.type(args[len - 1]) == 'function') {\r\n      callback = args[len - 1];\r\n      len--;\r\n    }\r\n    // 解析路径\r\n    for (var i = 0; i < len; i++) {\r\n      var t = core.utils.type(args[i]);\r\n      if (t === 'array') {\r\n        var list = args[i];\r\n        for (var j = 0; j < list.length; j++) {\r\n          if (list[j] == undefined) {\r\n            continue;\r\n          }\r\n          var s = this.resolvePath(list[j]);\r\n          libs.push(s);\r\n        }\r\n      } else {\r\n        var ss = args[i].split(',');\r\n        for (var j = 0; j < ss.length; j++) {\r\n          if (ss[j] == undefined) {\r\n            continue;\r\n          }\r\n          var s = this.resolvePath(ss[j]);\r\n          libs.push(s);\r\n        }\r\n      }\r\n    }\r\n    var deferred = new core.Deferred();\r\n    // 判断是否加载完成\r\n    if (libs.length == 1 && this.modules.contains(libs[0])) {\r\n      // 获取模块\r\n      var module = this.modules.get(libs[0]);\r\n      // 判断模块是否已经给定义\r\n      if (module.status == core.ModuleStatus.Defined) {\r\n        // 获取exports\r\n        var exports = module.exports;\r\n        // 添加done和fail函数\r\n        exports.done = function done (fn) {\r\n          deferred.done(fn);\r\n        };\r\n        exports.fail = function fail (fn) {\r\n          deferred.fail(fn);\r\n        };\r\n        try {\r\n          // 调用回调函数\r\n          if (callback) {\r\n            callback.call(this, exports);\r\n          }\r\n        } catch (ex) {\r\n          core.logger.error('core.require: ', ex.Message, ex);\r\n        }\r\n        try {\r\n          // 通知加载成功\r\n          deferred.resolve(module);\r\n        } catch (ex) {\r\n          core.logger.error('core.require: ', ex.Message, ex);\r\n        }\r\n        // 返回结果\r\n        return exports;\r\n      }\r\n    }\r\n    // 定义进程\r\n    var progress = new Progress(libs.length, function (status, values) {\r\n      if (progress.isOK()) {\r\n        try {\r\n          // 调用回调函数\r\n          if (callback) {\r\n            callback.apply(_this, values);\r\n          }\r\n        } catch (ex) {\r\n          core.logger.error('core.require: ', ex.Message, ex);\r\n        }\r\n        try {\r\n          // 通知加载成功\r\n          deferred.resolve(values);\r\n        } catch (ex) {\r\n          core.logger.error('core.require: ', ex.Message, ex);\r\n        }\r\n      } else {\r\n        try {\r\n          // 调用回调函数\r\n          if (callback) {\r\n            callback.apply(_this, values);\r\n          }\r\n        } catch (ex) {\r\n          core.logger.error('core.require: ', ex.Message, ex);\r\n        }\r\n        try {\r\n          // 通知加载成功\r\n          deferred.reject(values);\r\n        } catch (ex) {\r\n          core.logger.error('core.require: ', ex.Message, ex);\r\n        }\r\n      }\r\n    });\r\n    for (var i = 0; i < libs.length; i++) {\r\n      // 定义任务节点\r\n      var taskNode = new TaskNode(i, libs[i], options, progress);\r\n      // 加入队列\r\n      this.queue.push(taskNode);\r\n    }\r\n    if (this.status == REQUIRE_STATUS.Free) {\r\n      this.execMountTask();\r\n    }\r\n    return deferred;\r\n  };\r\n\r\n  /**\r\n   * 执行mount task\r\n   */\r\n  Require.prototype.execMountTask = function () {\r\n    // 获取队列长度\r\n    var len = this.queue.length;\r\n    if (len == 0) {\r\n      // 设置空闲状态\r\n      this.status = REQUIRE_STATUS.Free;\r\n      return;\r\n    }\r\n    // 设置运行状态\r\n    this.status = REQUIRE_STATUS.Busy;\r\n    // 获取任务节点\r\n    var node = this.queue.shift();\r\n    // 判断任务进程是否有效\r\n    if (node.progress.isOK() == false) {\r\n      this.execMountTask();\r\n      return;\r\n    }\r\n    // 加载资源\r\n    this.mount(node);\r\n  };\r\n\r\n  /**\r\n   * 加载\r\n   * @param taskNode\r\n   */\r\n  Require.prototype.mount = function (taskNode) {\r\n    // 获取类型\r\n    var type = this.getFileNamePostfix(taskNode.src);\r\n    if (type == 'js' || (taskNode.src && taskNode.src.indexOf('script_type=js') > -1)) {\r\n      // 尝试获取js加载点\r\n      var point = taskNode.params['jsPoint'];\r\n      if (point == undefined) {\r\n        point = this.head;\r\n      } else {\r\n        point = this.doc.querySelector(point);\r\n      }\r\n      this.mountJS(taskNode, point);\r\n      return;\r\n    } else if (type == 'css' || (taskNode.src && taskNode.src.indexOf('script_type=css') > -1)) {\r\n      // 尝试获取js加载点\r\n      var point = taskNode.params['cssPoint'];\r\n      if (point == undefined) {\r\n        point = this.head;\r\n      } else {\r\n        point = this.doc.querySelector(point);\r\n      }\r\n      this.mountCSS(taskNode, point);\r\n      return;\r\n    } else {\r\n      // 尝试获取js加载点\r\n      var point = taskNode.params['htmlPoint'];\r\n      if (point == undefined) {\r\n        point = this.doc.body;\r\n      } else {\r\n        point = this.doc.querySelector(point);\r\n      }\r\n      this.mountHTML(taskNode, point);\r\n      return;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 加载css\r\n   * @param task\r\n   * @param point\r\n   */\r\n  Require.prototype.mountCSS = function (task, point) {\r\n    var _this = this;\r\n    var path = task.src;\r\n    var node = this.doc.createElement('link');\r\n    if (this.charset) {\r\n      node.charset = this.charset;\r\n    }\r\n    node.setAttribute('crossorigin', true);\r\n    var supportOnload = 'onload' in node;\r\n    // for Old WebKit and Old Firefox\r\n    if (this.isOldWebKit || !supportOnload) {\r\n      var meta = {\r\n        // 定义超时\r\n        timeout: this.timeout || 30000,\r\n        // 当前消耗时间\r\n        time: 0,\r\n        // 是否为旧的webkit\r\n        isOldWebKit: this.isOldWebKit,\r\n        // 定义成功回调函数\r\n        success: function () {\r\n          // 通知成功\r\n          task.progress.work(true, task.index, task.src);\r\n          // 继续执行任务\r\n          _this.execMountTask();\r\n        },\r\n        // 定义错误回调函数\r\n        error: function () {\r\n          // css已经加载，node移除以便于节省内存\r\n          try {\r\n            point.removeChild(node);\r\n          } catch (ex) {\r\n            core.logger.error('core.require: ', ex.message, ex);\r\n          }\r\n          // 通知失败\r\n          task.progress.work(false);\r\n          point = null;\r\n          // 继续执行任务\r\n          _this.execMountTask();\r\n        }\r\n      };\r\n      setTimeout(function () {\r\n        checkCss(node, meta);\r\n        // node = null;\r\n        meta = null;\r\n      }, 1); // Begin after node insertion\r\n    } else {\r\n      node.onload = function () {\r\n        // 移除监听\r\n        node.onload = node.onerror = null;\r\n        // 通知成功\r\n        task.progress.work(true, task.index, task.src);\r\n        // 继续执行任务\r\n        _this.execMountTask();\r\n      };\r\n      node.onerror = function () {\r\n        // node移除以便于节省内存\r\n        try {\r\n          point.removeChild(node);\r\n        } catch (ex) {\r\n          core.logger.error('core.require: ', ex.message, ex);\r\n        }\r\n        // 移除监听\r\n        node.onload = node.onerror = null;\r\n        // 通知失败\r\n        task.progress.work(false);\r\n        // 继续执行任务\r\n        _this.execMountTask();\r\n      };\r\n    }\r\n    // 判断是否有上一个节点\r\n    var preNode = this.doc.getElementById(path);\r\n    // 如果存在旧的css节点，则删除\r\n    if (preNode) {\r\n      preNode.parentNode.removeChild(preNode);\r\n      preNode = null;\r\n    }\r\n    node.async = true;\r\n    node.rel = 'stylesheet';\r\n    node.type = 'text/css';\r\n    node.id = path;\r\n    // 设置href\r\n    node.href = path;\r\n    // 加入css脚本\r\n    point.appendChild(node);\r\n  };\r\n\r\n  /**\r\n    * 加载html\r\n    * @param task\r\n    * @param evtChain\r\n    */\r\n  Require.prototype.mountHTML = function (task, point) {\r\n    var _this = this;\r\n    var t = this.timeout;\r\n    if (task.params.timeout) {\r\n      t = task.params.timeout;\r\n    }\r\n    var path = task.src;\r\n    // 获取资源并加载\r\n    this.resource.get(path, t, function (code, data) {\r\n      if (code == 0) {\r\n        point.innerHTML = data;\r\n        // 通知成功\r\n        task.progress.work(true, task.index, data);\r\n      } else {\r\n        core.logger.error('core.require: ', 'code:' + code + ',message:' + data);\r\n        // 通知失败\r\n        task.progress.work(false);\r\n      }\r\n      // 继续执行任务\r\n      _this.execMountTask();\r\n    }, this.debug);\r\n  };\r\n  /**\r\n    * 加载js\r\n    * @param path\r\n    * @param point\r\n    * @param evtChain\r\n    */\r\n  Require.prototype.mountJS = function (task, point) {\r\n    var _this = this;\r\n    var path = task.src;\r\n    // 从缓存中获取module\r\n    var module = this.modules.get(path);\r\n    // 判断module是否已经存在  ,(非debug模式下，缓存过的数据就不加载，debug模式下的就每次加载)\r\n    if (module && module.LoadFinish === true && this.debug === false) {\r\n      // 通知任务完成\r\n      task.progress.work(true, task.index, module.exports);\r\n      // 继续执行任务\r\n      this.execMountTask();\r\n      return;\r\n    }\r\n    // 定义新的module\r\n    module = new core.Module();\r\n    // 设置ID\r\n    module.id = path;\r\n    // 保存source\r\n    module.src = path;\r\n    // 设置状态\r\n    module.status = core.ModuleStatus.Loading;\r\n    // 所有的js都进行缓存\r\n    // if (this.debug !== true) {\r\n    this.modules.put(path, module);\r\n    // }\r\n    var node = this.doc.createElement('script');\r\n    node.setAttribute('crossorigin', 'true');\r\n    if (this.charset) {\r\n      node.charset = this.charset;\r\n    }\r\n    // 判断是否有onload函数\r\n    var supportOnload = 'onload' in node;\r\n    if (supportOnload) {\r\n      node.onload = function () {\r\n        // 移除监听\r\n        node.onload = node.onerror = null;\r\n        // 判断是否为模块\r\n        if (module.status == core.ModuleStatus.Loading) {\r\n          task.progress.work(true, task.index, path);\r\n        }\r\n        module.LoadFinish = true;\r\n        // 继续执行任务\r\n        _this.execMountTask();\r\n      };\r\n      node.onerror = function () {\r\n        // js已经加载，node移除以便于节省内存\r\n        try {\r\n          point.removeChild(node);\r\n        } catch (ex) {\r\n          core.logger.error('core.require: ', ex.message, ex);\r\n        }\r\n        // 移除监听\r\n        node.onload = node.onerror = null;\r\n        point = node = null;\r\n        // 通知失败\r\n        task.progress.work(false);\r\n        // 继续执行任务\r\n        _this.execMountTask();\r\n      };\r\n    } else {\r\n      node.onreadystatechange = function () {\r\n        if (/loaded|complete/.test(node.readyState)) {\r\n          // 移除监听\r\n          node.onreadystatechange = null;\r\n          node = null;\r\n          // 判断是否为模块\r\n          if (module.status == core.ModuleStatus.Loading) {\r\n            task.progress.work(true, task.index, path);\r\n          }\r\n          module.LoadFinish = true;\r\n          // 继续执行任务\r\n          _this.execMountTask();\r\n        }\r\n      };\r\n    }\r\n    // 设置为非同步模式\r\n    node.async = true;\r\n    // 设置src\r\n    node.src = path;\r\n    // 重新定义define函数\r\n    delete this.win.define;\r\n    this.win.define = this.createDefine(module, task);\r\n    // 加入js脚本\r\n    point.appendChild(node);\r\n  };\r\n  /**\r\n    * 创建define函数\r\n    * @param module\r\n    * @param task\r\n    * @returns {(id:any, deps:any, factory:any)=>undefined}\r\n    */\r\n  Require.prototype.createDefine = function (module, task) {\r\n    var _this = this;\r\n    // 定义require\r\n    var _require = function () {\r\n      return _this.require.apply(_this, core.utils.args2Arr(arguments));\r\n    };\r\n    return function () {\r\n      var args = core.utils.args2Arr(arguments);\r\n      // 设置模块状态\r\n      module.status = core.ModuleStatus.Defining;\r\n      var id, deps, factory;\r\n      // 获取参数列表长度\r\n      var argsLen = args.length;\r\n      // 如果参数个数为1，代表函数为define(factory)\r\n      if (argsLen === 1) {\r\n        factory = args[0];\r\n        id = undefined;\r\n      } else if (argsLen === 2) {\r\n        factory = args[1];\r\n        // define(deps, factory)\r\n        if (core.utils.isArray(args[0])) {\r\n          deps = args[0];\r\n          id = undefined;\r\n        } else {\r\n          deps = undefined;\r\n        }\r\n      } else {\r\n        id = args[0];\r\n        deps = args[1];\r\n        factory = args[2];\r\n      }\r\n      if (id) {\r\n        module.id = id;\r\n        // 加入别名(id作为别名)\r\n        _this.alias[id] = module.src;\r\n      }\r\n      // 解析依赖关系\r\n      if (deps && deps != '') {\r\n        _this.require(deps, function () {\r\n          if (core.utils.type(factory) == 'function') {\r\n            module.exports = {};\r\n            factory.call(module.exports, _require, module.exports, module);\r\n          } else {\r\n            module.exports = factory;\r\n          }\r\n          // 更新状态\r\n          module.status = core.ModuleStatus.Defined;\r\n          // 通知成功\r\n          task.progress.work(true, task.index, module.exports);\r\n        });\r\n      } else {\r\n        if (core.utils.type(factory) == 'function') {\r\n          module.exports = {};\r\n          factory.call(module.exports, _require, module.exports, module);\r\n        } else {\r\n          module.exports = factory;\r\n        }\r\n        // 更新状态\r\n        module.status = core.ModuleStatus.Defined;\r\n        // 通知成功\r\n        task.progress.work(true, task.index, module.exports);\r\n      }\r\n    };\r\n  };\r\n\r\n  /**\r\n    * 解析路径\r\n    * @param uri\r\n    * @returns {string}\r\n    */\r\n  Require.prototype.resolvePath = function (uri) {\r\n    try {\r\n      // 解析URI\r\n      uri = this.parserPath(uri, true);\r\n      // 获取后缀\r\n      var postfix = this.getFileNamePostfix(uri);\r\n      postfix = postfix.toLowerCase();\r\n      // 格式化文件名\r\n      if (postfix != 'js' && postfix != 'css' && postfix != 'html') {\r\n        uri += '.js';\r\n      }\r\n      if (uri.indexOf('?') == -1) {\r\n        uri += '?version=';\r\n        uri += this.version;\r\n      } else {\r\n        uri += '&version=';\r\n        uri += this.version;\r\n      }\r\n      return uri;\r\n    } catch (e) {\r\n      core.logger.error('core.require: ', 'resolve path[' + uri + '] fail', e);\r\n      throw e;\r\n    }\r\n  };\r\n\r\n  /**\r\n    * 获取文件名后缀\r\n    * @param name\r\n    * @returns {any}\r\n    */\r\n  Require.prototype.getFileNamePostfix = function (name) {\r\n    var lastIndex = name.lastIndexOf('?');\r\n    if (lastIndex == -1) {\r\n      lastIndex = name.length;\r\n    }\r\n    var index = name.lastIndexOf('.', lastIndex);\r\n    if (index == -1) {\r\n      return '';\r\n    }\r\n    // 获取后缀\r\n    var postfix = name.substring(index + 1, lastIndex);\r\n    return postfix;\r\n  };\r\n\r\n  /**\r\n    * 解析路径\r\n    * @param uri\r\n    * @param replace\r\n    */\r\n  Require.prototype.parserPath = function (uri, replace) {\r\n    // 绝对路径（http），不解析直接返回\r\n    if (uri.indexOf('http://') == 0) {\r\n      return uri;\r\n    }\r\n    // 绝对路径（https），不解析直接返回\r\n    if (uri.indexOf('https://') == 0) {\r\n      return uri;\r\n    }\r\n    // 绝对路径（file），不解析直接返回\r\n    if (uri.indexOf('file:///') == 0) {\r\n      return uri;\r\n    }\r\n    // id'/lib/yufp/yufp.js'，代表路径从根目录起\r\n    if (uri.indexOf('/') == 0) {\r\n      var path1 = '', href1 = this.doc.location.href, pathName1 = this.doc.location.pathname;\r\n      if (this.doc.location.protocol == 'file:') {\r\n        var index = href1.lastIndexOf('/');\r\n        path1 = href1.slice(0, index + 1) + uri;\r\n      } else if (pathName1.length == 0) {\r\n        path1 = href1 + uri;\r\n      } else {\r\n        var index = href1.lastIndexOf(pathName1);\r\n        var host = href1.slice(0, index);\r\n        index = pathName1.indexOf('/', 1);\r\n        var projectName = '';\r\n        if (index != -1) {\r\n          projectName = pathName1.slice(0, index);\r\n        }\r\n        path1 = host + projectName + '/' + uri;\r\n      }\r\n      return path1;\r\n    }\r\n    // id'./lib/yufp/yufp.js'，代表路径从当前目录起\r\n    if (uri.indexOf('./') == 0) {\r\n      var href2 = this.doc.location.href;\r\n      var index = href2.indexOf('?');\r\n      href2 = index > -1 ? href2.slice(0, index) : href2;\r\n      index = href2.lastIndexOf('/');\r\n      var path2 = href2.slice(0, index) + uri.slice(1);\r\n      return path2;\r\n    }\r\n    // 是否进行别名替换\r\n    if (replace) {\r\n      // 判断是否为别名\r\n      var path3 = this.alias[uri];\r\n      if (!path3) {\r\n        var index = uri.indexOf('/');\r\n        if (index == -1) {\r\n          path3 = this.base + uri;\r\n        } else {\r\n          // 判断是否有路径映射\r\n          var mark = uri.slice(0, index), s = this.paths[mark];\r\n          if (s) {\r\n            path3 = s + uri.slice(index);\r\n          } else {\r\n            path3 = this.base + uri;\r\n          }\r\n        }\r\n      }\r\n      return this.parserPath(path3, false);\r\n    }\r\n    var href = this.doc.location.href;\r\n    var pathName = this.doc.location.pathname;\r\n    var path;\r\n    if (this.doc.location.protocol == 'file:') {\r\n      var index = href.lastIndexOf('/');\r\n      path = href.slice(0, index + 1) + uri;\r\n    } else if (pathName.length == 0) {\r\n      path = href + uri;\r\n    } else {\r\n      var index = href.lastIndexOf(pathName);\r\n      var host = href.slice(0, index);\r\n      index = pathName.indexOf('/', 1);\r\n      var projectName = '';\r\n      if (index != -1) {\r\n        projectName = pathName.slice(0, index);\r\n      }\r\n      path = host + projectName + '/' + uri;\r\n    }\r\n    return path;\r\n  };\r\n\r\n  /**\r\n   * 导出Require对象\r\n   */\r\n  core.Require = Require;\r\n  /**\r\n   * 导出require\r\n   */\r\n  core.require = new Require();\r\n}(yufp.core, yufp));\r\n\n/**\r\n * /src/core/router.js\r\n * @created by jiangcheng 2017-12-20\r\n * @updated by helin3 2018-08-09\r\n * @updated by kongqf 2018-08-28 addHistory增加校验后再添加\r\n * @description core-Router 路由对象\r\n */\r\n(function (core, yufp) {\r\n  /**\r\n   * 过滤类型\r\n   */\r\n  var FilterType = {};\r\n  (function (FilterType) {\r\n    /**\r\n     * before拦截\r\n     */\r\n    FilterType[FilterType['Before'] = 0] = 'Before';\r\n    /**\r\n     * mount拦截\r\n     */\r\n    FilterType[FilterType['Mount'] = 1] = 'Mount';\r\n    /**\r\n     * ready拦截\r\n     */\r\n    FilterType[FilterType['Ready'] = 2] = 'Ready';\r\n    /**\r\n     *  mount拦截\r\n     */\r\n    FilterType[FilterType['UnMount'] = 3] = 'UnMount';\r\n    /**\r\n     * destroy拦截\r\n     */\r\n    FilterType[FilterType['Destroy'] = 4] = 'Destroy';\r\n  }(FilterType));\r\n  core.FilterType = FilterType;\r\n\r\n  /**\r\n   * 打开策略\r\n   */\r\n  var OpenPolicy = {};\r\n  (function (OpenPolicy) {\r\n    /**\r\n     * 替换策略\r\n     */\r\n    OpenPolicy[OpenPolicy['Replace'] = 0] = 'Replace';\r\n    /**\r\n     * 增加策略\r\n     */\r\n    OpenPolicy[OpenPolicy['Append'] = 1] = 'Append';\r\n  }(OpenPolicy));\r\n  core.OpenPolicy = OpenPolicy;\r\n\r\n  /**\r\n   * 构造函数\r\n   */\r\n  var Router = function () {\r\n    // 保存document\r\n    this.doc = document;\r\n    // route table\r\n    this.routeTable = {};\r\n    // 激活页面\r\n    this.activePages = [];\r\n    // 历史记录\r\n    this.history = [];\r\n    // 历史缓存大小\r\n    this.historyCacheSize = 200;\r\n    // 过滤器\r\n    this.filters = [];\r\n    // 参数配置\r\n    this.settings = {};\r\n    // 初始化mount handlers\r\n    this.mountHandlers = {};\r\n    // 创建event chain\r\n    this.eventChain = new core.EventChain();\r\n    // 设默认mount handler\r\n    this.addMountHandler('default', new DefaultMountHandler());\r\n  };\r\n\r\n  /**\r\n   * 加入mount handler\r\n   * @param type\r\n   * @param handler\r\n   */\r\n  Router.prototype.addMountHandler = function (type, handler) {\r\n    this.mountHandlers[type] = handler;\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * 获取mount handler\r\n   * @param type\r\n   * @returns {any}\r\n   */\r\n  Router.prototype.getMountHandler = function (type) {\r\n    return this.mountHandlers[type];\r\n  };\r\n\r\n  /**\r\n   * 移除mount handler\r\n   * @param type\r\n   * @returns {yufp.core.Router}\r\n   */\r\n  Router.prototype.removeMountHandler = function (type) {\r\n    if (this.mountHandlers[type]) {\r\n      delete this.mountHandlers[type];\r\n    }\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * 加入过滤器\r\n   *\r\n   * @param filter\r\n   * @returns {yufp.core.Router}\r\n   */\r\n  Router.prototype.addFilter = function (filter) {\r\n    // 加入过滤器\r\n    this.filters.push(filter);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * 移除过滤器\r\n   * @param name\r\n   */\r\n  Router.prototype.removeFilter = function (args) {\r\n    // 获取过滤器名称\r\n    var name;\r\n    if (core.utils.type(args) == 'string') {\r\n      name = args;\r\n    } else {\r\n      name = args['name'];\r\n    }\r\n    // 查找待删除过滤器\r\n    var i = 0;\r\n    for (; i < this.filters.length; i++) {\r\n      if (name == this.filters[i].name) {\r\n        break;\r\n      }\r\n    }\r\n    // 删除过滤器\r\n    if (i < this.filters.length) {\r\n      this.filters.splice(i, 1);\r\n    }\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * 执行过滤器\r\n   * @param type\r\n   * @param args\r\n   * @returns {any}\r\n   */\r\n  Router.prototype.doFilters = function (type) {\r\n    var _args = arguments;\r\n    var args = [];\r\n    for (var _i = 1; _i < _args.length; _i++) {\r\n      args[_i - 1] = _args[_i];\r\n    }\r\n    if (type == FilterType.Before) {\r\n      // 按顺序执行\r\n      for (var i = 0, filters = this.filters, len = filters.length; i < len; i++) {\r\n        if (!filters[i].before) {\r\n          continue;\r\n        }\r\n        // 获取before方法\r\n        var before = filters[i].before;\r\n        // 调用before方法\r\n        var res = before.apply(this, args);\r\n        // 判断是否中断执行\r\n        if (res == false) {\r\n          before = args = null;\r\n          return res;\r\n        }\r\n      }\r\n      return true;\r\n    } else if (type == FilterType.Mount) {\r\n      // 按顺序执行\r\n      for (var i = 0, filters = this.filters, len = filters.length; i < len; i++) {\r\n        if (!filters[i].mount) {\r\n          continue;\r\n        }\r\n        // 获取mount方法\r\n        var mount = filters[i].mount;\r\n        // 调用mount方法\r\n        var res = mount.apply(this, args);\r\n        // 判断是否中断执行\r\n        if (res == false) {\r\n          mount = args = null;\r\n          return res;\r\n        }\r\n      }\r\n      return true;\r\n    } else if (type == FilterType.Ready) {\r\n      // 按顺序执行\r\n      for (var i = 0, filters = this.filters, len = filters.length; i < len; i++) {\r\n        if (!filters[i].ready) {\r\n          continue;\r\n        }\r\n        // 获取ready方法\r\n        var ready = filters[i].ready;\r\n        // 调用ready方法\r\n        var res = ready.apply(this, args);\r\n        // 判断是否中断执行\r\n        if (res == false) {\r\n          ready = args = null;\r\n          return res;\r\n        }\r\n      }\r\n      return true;\r\n    } else if (type == FilterType.UnMount) {\r\n      // 按顺序执行\r\n      for (var i = 0, filters = this.filters, len = filters.length; i < len; i++) {\r\n        if (!filters[i].unMount) {\r\n          continue;\r\n        }\r\n        // 获取unMount方法\r\n        var unMount = filters[i].unMount;\r\n        // 调用unMount方法\r\n        var res = unMount.apply(this, args);\r\n        // 判断是否中断执行\r\n        if (res == false) {\r\n          unMount = args = null;\r\n          return res;\r\n        }\r\n      }\r\n      return true;\r\n    } else {\r\n      // 按顺序执行\r\n      for (var i = 0, filters = this.filters, len = filters.length; i < len; i++) {\r\n        if (!filters[i].destroy) {\r\n          continue;\r\n        }\r\n        // 获取destroy方法\r\n        var destroy = filters[i].destroy;\r\n        // 调用destroy方法\r\n        var res = destroy.apply(this, args);\r\n        // 判断是否中断执行\r\n        if (res == false) {\r\n          destroy = args = null;\r\n          return res;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n  };\r\n\r\n  /**\r\n    * 加入路由信息\r\n    * @param name\r\n    * @param route\r\n    * @returns {yufp.core.Router}\r\n    */\r\n  Router.prototype.addRoute = function (name, route) {\r\n    var unit = {};\r\n    core.utils.extend(true, unit, route);\r\n    // 保存route信息\r\n    this.routeTable[name] = unit;\r\n    unit = null;\r\n  };\r\n\r\n  /**\r\n    * 移除路由信息\r\n    * @param name\r\n    * @returns {yufp.core.Router}\r\n    */\r\n  Router.prototype.removeRoute = function (name) {\r\n    var route = this.routeTable[name];\r\n    if (route) {\r\n      delete this.routeTable[name];\r\n    }\r\n    return route;\r\n  };\r\n\r\n  /**\r\n    * 获取路由信息\r\n    * @param name\r\n    */\r\n  Router.prototype.getRoute = function (name) {\r\n    var route = {};\r\n    core.utils.extend(true, route, this.routeTable[name]);\r\n    return route;\r\n  };\r\n\r\n  /**\r\n    * 加入路由表\r\n    * @param routeTable\r\n    */\r\n  Router.prototype.addRouteTable = function (routeTable) {\r\n    // 保存路由表数据\r\n    for (var name in routeTable) {\r\n      // 获取路由信息\r\n      var route = routeTable[name];\r\n      // 加入路由信息\r\n      this.addRoute(name, route);\r\n    }\r\n  };\r\n\r\n  /**\r\n    * 清空路由表\r\n    */\r\n  Router.prototype.clearRouteTable = function () {\r\n    this.routeTable = {};\r\n  };\r\n\r\n  /**\r\n    * 设置默认root id\r\n    * @param rootId\r\n    * @returns {yufp.core.Router}\r\n    */\r\n  Router.prototype.setDefaultRootId = function (rootId) {\r\n    this.settings['rootId'] = rootId;\r\n  };\r\n\r\n  /**\r\n    * 获取默认root id\r\n    * @returns {any}\r\n    */\r\n  Router.prototype.getDefaultRootId = function () {\r\n    return this.settings['rootId'];\r\n  };\r\n\r\n  /**\r\n    * 设置历史缓存的大小\r\n    * @param size\r\n    */\r\n  Router.prototype.setHistoryCacheSize = function (size) {\r\n    this.historyCacheSize = size;\r\n  };\r\n\r\n  /**\r\n    * 获取历史缓存大小\r\n    * @returns {number}\r\n    */\r\n  Router.prototype.getHistoryCacheSize = function () {\r\n    return this.historyCacheSize;\r\n  };\r\n\r\n  /**\r\n    * 加入历史记录\r\n    * @param id\r\n    * @param data\r\n    * @param rootId\r\n    */\r\n  Router.prototype.addHistory = function (id, data, rootId, options) {\r\n    // 计算历史记录数量超出最大限制的数量\r\n    var n = this.history.length - this.historyCacheSize;\r\n    if (n >= 0) {\r\n      // 移除一半的记录\r\n      this.history.splice(0, this.history.length / 2);\r\n    }\r\n    // 创建历史记录\r\n    var rec = {\r\n      id: id,\r\n      data: data,\r\n      rootId: rootId,\r\n      options: options\r\n    };\r\n    // 加入历史记录\r\n    // 增加校验history是否已经存在该信息\r\n    !this.checkHistory(rec) ? this.history.push(rec) : 0;\r\n  };\r\n  /**\r\n   * 校验history是否已经存在\r\n   * @param {Object} his 待校验history\r\n   */\r\n  Router.prototype.checkHistory = function (his) {\r\n    var exist = false;\r\n    this.history.forEach(function (item) {\r\n      if (item.id == his.id && item.rootId == his.rootId) {\r\n        exist = true;\r\n        return;\r\n      }\r\n    });\r\n    return exist;\r\n  };\r\n  /**\r\n    * 移除指定的历史记录\r\n    * @param id\r\n    */\r\n  Router.prototype.removeHistory = function (id) {\r\n    // 查找并删除指定的记录\r\n    for (var i = this.history.length - 1; i >= 0; i--) {\r\n      if (this.history[i].id === id) {\r\n        this.history.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n    * 清空临时\r\n    */\r\n  Router.prototype.clearHistory = function () {\r\n    this.history = [];\r\n  };\r\n\r\n  /**\r\n    * 历史回退\r\n    * 关于通过append浮出的路由，回退功能暂且仅解决无参数的情况\r\n    * @param term\r\n    * @returns {Deferred}\r\n    */\r\n  Router.prototype.back = function (term) {\r\n    // 如果未指定条件，则默认回退一个\r\n    var len = this.history.length;\r\n    if (len <= 1) {\r\n      // 定义deferred\r\n      var deferred = new core.Deferred();\r\n      deferred.reject('');\r\n      return deferred;\r\n    }\r\n    // 无条件则默认后退一步\r\n    if (!term) {\r\n      var pre = this.history[len - 1];\r\n      if (pre && pre.options && pre.options.openPolicy == OpenPolicy.Append) {\r\n        this.history.splice(len - 1, 1);\r\n        this.remove();\r\n        return;\r\n      }\r\n      // 删除记录\r\n      var index = len - 2;\r\n      var recs = this.history.splice(index, 2);\r\n      // 标志为回退\r\n      recs[0].isBack = true;\r\n      // 重新跳转\r\n      return this.to(recs[0]);\r\n    }\r\n    if (term.id) {\r\n      var index = -1;\r\n      for (var i = len - 2; i >= 0; i--) {\r\n        var node = this.history[i];\r\n        if (node.id == term.id) {\r\n          index = i;\r\n          break;\r\n        }\r\n      }\r\n      // 判断是否查找到满足条件的记录\r\n      if (index >= 0) {\r\n        var n = len - index;\r\n        var recs = this.history.splice(index, n);\r\n        // 标志为回退\r\n        recs[0].isBack = true;\r\n        // 重新跳转\r\n        return this.to(recs[0]);\r\n      } else {\r\n        core.logger.error('core.router: ', 'can not found the term id:[' + term.id + ']');\r\n      }\r\n    } else if (term.before) {\r\n      var index = -1;\r\n      for (var i = 0; i < len; i++) {\r\n        var node = this.history[i];\r\n        if (node.id == term.before) {\r\n          index = i;\r\n          break;\r\n        }\r\n      }\r\n      index -= 1;\r\n      // 判断是否查找到满足条件的记录\r\n      if (index >= 0) {\r\n        var n = len - index;\r\n        var recs = this.history.splice(index, n);\r\n        // 标志为回退\r\n        recs[0].isBack = true;\r\n        // 重新跳转\r\n        return this.to(recs[0]);\r\n      } else {\r\n        core.logger.error('core.router: ', 'can not found the term before:[' + term.before + ']');\r\n      }\r\n    } else {\r\n      // 定义deferred\r\n      var deferred = new core.Deferred();\r\n      deferred.reject('');\r\n      return deferred;\r\n    }\r\n  };\r\n\r\n  /**\r\n    * 路由跳转(替换原来内容)\r\n    *\r\n    * @returns {any}\r\n    */\r\n  Router.prototype.replace = function () {\r\n    var args = core.utils.args2Arr(arguments);\r\n    // 获取跳转目标信息\r\n    var target;\r\n    if (args.length == 1 && core.utils.type(args[0]) == 'object') {\r\n      target = args[0];\r\n    } else {\r\n      target = {};\r\n      for (var i = 0; i < args.length; i++) {\r\n        if (i == 0) {\r\n          target.id = args[i];\r\n        } else if (i == 1) {\r\n          target.data = args[i];\r\n        } else if (i == 2) {\r\n          target.rootId = args[i];\r\n        } else if (i == 3) {\r\n          target.options = args[i];\r\n        }\r\n      }\r\n    }\r\n    // 加入replace策略\r\n    target.options = target.options === void 0 ? {} : target.options;\r\n    target.options.openPolicy = OpenPolicy.Replace;\r\n    // 路由跳转\r\n    return this.to(target);\r\n  };\r\n\r\n  /**\r\n    * 路由跳转(替换原来内容)\r\n    *\r\n    * @returns {any}\r\n    */\r\n  Router.prototype.append = function () {\r\n    var args = core.utils.args2Arr(arguments);\r\n    // 获取跳转目标信息\r\n    var target;\r\n    if (args.length == 1 && core.utils.type(args[0]) == 'object') {\r\n      target = args[0];\r\n    } else {\r\n      target = {};\r\n      for (var i = 0; i < args.length; i++) {\r\n        if (i == 0) {\r\n          target.id = args[i];\r\n        } else if (i == 1) {\r\n          target.data = args[i];\r\n        } else if (i == 2) {\r\n          target.rootId = args[i];\r\n        } else if (i == 3) {\r\n          target.options = args[i];\r\n        }\r\n      }\r\n    }\r\n    // 加入append策略\r\n    target.options = target.options === void 0 ? {} : target.options;\r\n    target.options.openPolicy = OpenPolicy.Append;\r\n    // 路由跳转\r\n    return this.to(target);\r\n  };\r\n\r\n  /**\r\n    * 移除append方式加入的页面\r\n    * 如果append页面不在最顶层(可以包含子页面），将不会生效\r\n    *\r\n    *@param boolean\r\n    */\r\n  Router.prototype.remove = function () {\r\n    // 无激活页面，不做任何处理\r\n    if (this.activePages.length == 0) {\r\n      return false;\r\n    }\r\n    // 查找最新一个append页面\r\n    var index = -1;\r\n    for (var i = this.activePages.length - 1; i >= 0; i--) {\r\n      // 如果某个pages下面的子页面大于1，则认为是一个append页面\r\n      if (this.activePages[i].nodes.length > 1) {\r\n        index = i;\r\n        break;\r\n      }\r\n      // 再判断打开方式是否为append\r\n      var cite = this.activePages[i].nodes[0].cite;\r\n      if (cite.options && cite.options.openPolicy === OpenPolicy.Append) {\r\n        index = i;\r\n        break;\r\n      }\r\n    }\r\n    // 查找不到激活的append页面，不做处理\r\n    if (index == -1) {\r\n      return false;\r\n    }\r\n    // 卸载处理\r\n    return this.unMount('', index);\r\n  };\r\n\r\n  /**\r\n    * 路由跳转\r\n    *\r\n    * @returns {any}\r\n    */\r\n  Router.prototype.to = function () {\r\n    var args = core.utils.args2Arr(arguments);\r\n    // 获取跳转目标信息\r\n    var target;\r\n    if (args.length == 1 && core.utils.type(args[0]) == 'object') {\r\n      target = args[0];\r\n    } else {\r\n      target = {};\r\n      for (var i = 0; i < args.length; i++) {\r\n        if (i == 0) {\r\n          target.id = args[i];\r\n        } else if (i == 1) {\r\n          target.data = args[i];\r\n        } else if (i == 2) {\r\n          target.rootId = args[i];\r\n        } else if (i == 3) {\r\n          target.options = args[i];\r\n        }\r\n      }\r\n    }\r\n    var targetId = target.id;\r\n    // 获取路由信息\r\n    var route = this.getRoute(targetId);\r\n    if (!route) {\r\n      core.logger.error('core.router: ', 'Router info not register [' + targetId + ']');\r\n      return;\r\n    }\r\n    // 如果root id未设置，从路由信息中获取\r\n    if (!target.rootId) {\r\n      target.rootId = route['rootId'];\r\n    }\r\n    // 默认root id\r\n    if (!target.rootId) {\r\n      target.rootId = this.settings['rootId'];\r\n    }\r\n    // 定义引用\r\n    var cite = {\r\n      id: targetId,\r\n      rootId: target.rootId,\r\n      startTime: new Date().getTime(),\r\n      options: target.options,\r\n      isBack: target.isBack ? target.isBack : false\r\n    };\r\n    // 执行before过滤器\r\n    var res = this.doFilters(FilterType.Before, targetId, target.data, cite);\r\n    // 如果返回false，则不允许跳转\r\n    if (res == false) {\r\n      return;\r\n    }\r\n    // 定义deferred\r\n    var deferred = new core.Deferred();\r\n    // 装载\r\n    this.mount(target, route, cite, deferred);\r\n    return deferred;\r\n  };\r\n\r\n  /**\r\n    * 装载\r\n    * @param target\r\n    * @param route\r\n    * @param cite\r\n    * @param deferred\r\n    * @returns {boolean}\r\n    */\r\n  Router.prototype.mount = function (target, route, cite, deferred) {\r\n    var _this = this;\r\n    // 获取mount hanlder类型\r\n    var mountHandlerType = cite.options && cite.options.mountHandlerType ? cite.options.mountHandlerType : 'default';\r\n    // 获取mount handler\r\n    var handler = this.getMountHandler(mountHandlerType);\r\n    // 加入事件队列\r\n    this.eventChain.post(function () {\r\n      // 处理mount\r\n      handler.mount(target.id, route, cite, _this, function (code, exports, root) {\r\n        // 正常返回\r\n        if (code !== 0) {\r\n          core.logger.error('core.router: ', 'mount fail');\r\n          // 通知失败\r\n          deferred.reject(target.id);\r\n          _this.eventChain.fire();\r\n          return;\r\n        }\r\n        // 设置默认值\r\n        if (exports == undefined) {\r\n          exports = {};\r\n        }\r\n        cite.root = root;\r\n        var page = {\r\n          target: target,\r\n          exports: exports,\r\n          cite: cite\r\n        };\r\n        // 查找root id的pages的索引\r\n        var index = _this.lastIndexOfPages(target.rootId);\r\n        // 获取最新一个page记录节点\r\n        var lastPages;\r\n        if (index == -1) {\r\n          lastPages = {\r\n            id: target.rootId,\r\n            nodes: []\r\n          };\r\n          // 加入激活页面集合\r\n          _this.activePages.push(lastPages);\r\n        } else {\r\n          lastPages = _this.activePages[index];\r\n        }\r\n        lastPages.nodes.push(page);\r\n        // 加入历史记录(append模式不加入历史记录)\r\n        //                        if (!cite.options || cite.options.openPolicy != OpenPolicy.Append) {\r\n        _this.addHistory(target.id, target.data, target.rootId, target.options);\r\n        //                        }\r\n        var curTime = new Date().getTime();\r\n        core.logger.debug('core.router: ', 'Open page [' + target.id + '] Cost:' + (curTime - cite.startTime) + ' ms');\r\n        if (exports.ready) {\r\n          // 执行过滤器\r\n          _this.doFilters(FilterType.Ready, exports, target.id, target.data, cite);\r\n          // 执行ready方法\r\n          try {\r\n            exports.ready(target.id, target.data, cite);\r\n          } catch (ex) {\r\n            core.logger.error('core.router: ', ex.Message, ex);\r\n          }\r\n        }\r\n        // 通知成功\r\n        deferred.resolve(target.id);\r\n        // 通知下一个\r\n        _this.eventChain.fire();\r\n      });\r\n    });\r\n    return true;\r\n  };\r\n\r\n  /**\r\n    * 释放pages\r\n    * @param pages\r\n    * @returns {boolean}\r\n    */\r\n  Router.prototype.releasePages = function (pages, all, isChild) {\r\n    // 获取结束索引\r\n    var endIndex = all == true ? 0 : pages.nodes.length - 1;\r\n    // 按后进先出的顺序销毁\r\n    for (var i = pages.nodes.length - 1; i >= endIndex; i--) {\r\n      // 获取引用\r\n      var cite = pages.nodes[i].cite;\r\n      // 获取exports\r\n      var exports = pages.nodes[i].exports;\r\n      if (exports == undefined) {\r\n        continue;\r\n      }\r\n      var target = pages.nodes[i].target;\r\n      // 获取路由\r\n      var route = this.getRoute(target.id);\r\n      // 获取mount handler type\r\n      var mountHandlerType = cite.options && cite.options.mountHandlerType ? cite.options.mountHandlerType : 'default';\r\n      // 获取mount handler\r\n      var handler = this.getMountHandler(mountHandlerType);\r\n      try {\r\n        handler.unMount(target.id, route, cite, exports, this);\r\n        // debug为true时清除页面缓存\r\n        if (yufp.core.require.debug !== false) {\r\n          yufp.require.modules.remove(yufp.require.resolvePath(route.js));\r\n        }\r\n      } catch (ex) {\r\n        core.logger.error('core.router: ', ex.Message, ex);\r\n      }\r\n      // 调用destroy方法\r\n      if (exports.destroy) {\r\n        // 执行destroy过滤器\r\n        this.doFilters(FilterType.Destroy, exports, target.id, cite);\r\n        // 获取destroy\r\n        var destroy = exports.destroy;\r\n        // 调用模块的destroy方法\r\n        destroy.call(exports, target.id, cite);\r\n        exports.destroy = null;\r\n      }\r\n      // 如果是孩子页面，则从记录中移除\r\n      if (isChild) {\r\n        this.removeHistory(target.id);\r\n      }\r\n      // 删除node page\r\n      pages.nodes.splice(i, 1);\r\n    }\r\n    return true;\r\n  };\r\n\r\n  /**\r\n    * 卸载\r\n    * @param rootId\r\n    * @param index\r\n    * @returns {boolean}\r\n    */\r\n  Router.prototype.unMount = function (rootId, index) {\r\n    if (this.activePages.length == 0) {\r\n      return;\r\n    }\r\n    // 根据是否指定active pages的索引，进行分别的处理\r\n    var flag = index == void 0;\r\n    if (!flag) {\r\n      rootId = this.activePages[index].id;\r\n    } else {\r\n      index = 0;\r\n    }\r\n    // 卸载指定root id下面的所有页面\r\n    for (var i = this.activePages.length - 1; i >= index; i--) {\r\n      var pages = this.activePages[i];\r\n      if (rootId == pages.id) {\r\n        this.releasePages(pages, flag, false);\r\n        // 移除激活页面\r\n        if (flag || pages.nodes.length == 0) {\r\n          this.activePages.splice(i, 1);\r\n        }\r\n        return true;\r\n      } else if (this.isChildNode(rootId, pages.id)) {\r\n        this.releasePages(pages, true, true);\r\n        // 移除激活页面\r\n        this.activePages.splice(i, 1);\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /**\r\n    * 判断元素是否为父子关系\r\n    * @param root\r\n    * @param node\r\n    */\r\n  Router.prototype.isChildNode = function (root, child) {\r\n    // 获取parent node\r\n    var parentNode = core.utils.type(root) === 'string' ? this.doc.getElementById(root) : root;\r\n    // 如果parent node不存在，则不存在父子关系\r\n    if (!parentNode) {\r\n      return false;\r\n    }\r\n    // 获取child node\r\n    var childNode = core.utils.type(child) === 'string' ? this.doc.getElementById(child) : child;\r\n    // 如果child node不存在，则不存在父子关系\r\n    if (!childNode) {\r\n      return false;\r\n    }\r\n    // 查找\r\n    var parent = childNode.parentNode;\r\n    while (parent != parentNode && parent != this.doc) {\r\n      parent = parent.parentNode;\r\n    }\r\n    var res = parent == parentNode;\r\n    return res;\r\n  };\r\n\r\n  /**\r\n    * 发送消息\r\n    * @param id\r\n    * @param type\r\n    * @param message\r\n    * @returns {any}\r\n    */\r\n  Router.prototype.sendMessage = function (id, type, message) {\r\n    // 获取路由信息\r\n    var route = this.getRoute(id);\r\n    if (!route || !route.js) {\r\n      core.logger.error('core.router: ', 'Router info not register [' + id + ']，or none js module');\r\n      return;\r\n    }\r\n    // 获取exports\r\n    var exports = core.require.require(route.js);\r\n    // 判断exports是否存在\r\n    if (exports && exports.onmessage) {\r\n      // 查找前活动页面\r\n      var page = this.findPage(id);\r\n      // 获取引用\r\n      var cite = page ? page.cite : {};\r\n      // 通知\r\n      var res = exports.onmessage(type, message, cite);\r\n      return res;\r\n    } else {\r\n      core.logger.error('core.router: ', 'exports or exports.onMessage none define');\r\n    }\r\n  };\r\n\r\n  /**\r\n    * 查找最后一个满足要求的pages\r\n    * @param rootId\r\n    * @returns number\r\n    */\r\n  Router.prototype.lastIndexOfPages = function (rootId) {\r\n    var index = -1;\r\n    for (var i = this.activePages.length - 1; i >= 0; i--) {\r\n      if (this.activePages[i].id === rootId) {\r\n        index = i;\r\n        break;\r\n      }\r\n    }\r\n    return index;\r\n  };\r\n\r\n  /**\r\n    * 查找page\r\n    * @param rootId\r\n    * @returns number\r\n    */\r\n  Router.prototype.findPage = function (id) {\r\n    for (var i = this.activePages.length - 1; i >= 0; i--) {\r\n      for (var j = 0; j < this.activePages[i].nodes.length; j++) {\r\n        var page = this.activePages[i].nodes[j];\r\n        if (page.target.id === id) {\r\n          return page;\r\n        }\r\n      }\r\n    }\r\n    return void 0;\r\n  };\r\n\r\n  /**\r\n   * 默认路由对象\r\n   */\r\n  var DefaultMountHandler = function () {\r\n  };\r\n\r\n  /**\r\n   * 加载\r\n   * @param id\r\n   * @param route\r\n   * @param cite\r\n   * @param router\r\n   * @param callback\r\n   */\r\n  DefaultMountHandler.prototype.mount = function (id, route, cite, router, callback) {\r\n    // 获取root id\r\n    var rootId = cite.rootId;\r\n    // 获取root节点\r\n    var root = document.getElementById(rootId);\r\n    // css node节点数组\r\n    var cssNodes = [];\r\n    // js node节点数组\r\n    var jsNodes = [];\r\n    // html node节点\r\n    // var htmlNode;\r\n    // 获取第一节点\r\n    var node = core.utils.getFirstElementChild(root);\r\n    while (node != null) {\r\n      // 获取name\r\n      var nodeName = node.nodeName;\r\n      if (nodeName) {\r\n        // 转换为大写\r\n        nodeName = nodeName.toUpperCase();\r\n      }\r\n      if (nodeName == 'SCRIPT') {\r\n        jsNodes.push(node);\r\n      } else if (nodeName == 'LINK') {\r\n        cssNodes.push(node);\r\n      } else if (nodeName == 'DIV') {\r\n        // htmlNode = node;\r\n      }\r\n      node = core.utils.getNextElementSibling(node);\r\n    }\r\n    node = null;\r\n    var libs = [];\r\n    // 1、加入css\r\n    if (route.css) {\r\n      var list = route.css.split(',');\r\n      libs = libs.concat(list);\r\n    }\r\n    // 2、加入js\r\n    if (route.js) {\r\n      var list = route.js.split(',');\r\n      libs = libs.concat(list);\r\n    }\r\n    // 获取html资源\r\n    core.require.get(route.html, function (code, data) {\r\n      // 正常返回\r\n      if (code != 0) {\r\n        core.logger.error('core.router: loading html resource failed');\r\n        router.eventChain.fire();\r\n        return;\r\n      }\r\n      // 卸载之前的页面\r\n      router.unMount(rootId, void 0);\r\n      // 数组参数\r\n      var rId = '#' + root.id;\r\n      var args = {\r\n        'cssPoint': rId,\r\n        'jsPoint': rId\r\n      };\r\n      // 加载css和js\r\n      core.require.require(libs, function () {\r\n        var args = core.utils.args2Arr(arguments);\r\n        // 获取export函数\r\n        var exports;\r\n        for (var i = 0; i < args.length; i++) {\r\n          if (core.utils.type(args[i]) == 'object') {\r\n            exports = args[i];\r\n            break;\r\n          }\r\n        }\r\n        if (exports && exports.mount) {\r\n          // 执行过滤器\r\n          router.doFilters(FilterType.Mount, id, cite);\r\n          // 执行mount方法\r\n          try {\r\n            exports.mount(id, cite);\r\n          } catch (ex) {\r\n            core.logger.error('core.router: ', ex.Message, ex);\r\n          }\r\n        }\r\n        // 删除旧的js节点\r\n        for (var i = 0; root.hasChildNodes() && i < jsNodes.length; i++) {\r\n          try {\r\n            root.removeChild(jsNodes[i]);\r\n          } catch (ex) { }\r\n        }\r\n        jsNodes = null;\r\n        // 删除旧的css节点\r\n        for (var i = 0; root.hasChildNodes() && i < cssNodes.length; i++) {\r\n          try {\r\n            root.removeChild(cssNodes[i]);\r\n          } catch (ex) { }\r\n        }\r\n        cssNodes = null;\r\n        // 设置html内容\r\n        // 创建新的node节点\r\n        var newHtmlNode = document.createElement('div');\r\n        newHtmlNode.innerHTML = data;\r\n        // newHtmlNode.id = core.utils.uid('html', 0, 'RT_');\r\n        var hNodeId = core.utils.uidcode('RT_', cite.id);\r\n        var domLen = document.getElementById(hNodeId);\r\n        if (domLen) {\r\n          hNodeId = hNodeId + '_' + +new Date();\r\n        }\r\n        newHtmlNode.id = hNodeId;\r\n        // 记录html node\r\n        cite.el = '#' + hNodeId + ' :first-child';\r\n        // 新增html节点\r\n        root.appendChild(newHtmlNode);\r\n        // 调用回调函数\r\n        callback(0, exports, rId);\r\n        root = newHtmlNode = data = null;\r\n      }, args);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * 卸载\r\n   * @param id\r\n   * @param route\r\n   * @param rootId\r\n   * @param cite\r\n   * @param exports\r\n   * @param router\r\n   */\r\n  DefaultMountHandler.prototype.unMount = function (id, route, cite, exports, router) {\r\n    // 执行过滤器\r\n    router.doFilters(FilterType.UnMount, id, cite);\r\n    // 执行unMount方法\r\n    if (exports.unMount) {\r\n      try {\r\n        exports.unMount(id, cite);\r\n      } catch (ex) {\r\n        core.logger.error('core.router: ', ex.Message, ex);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 导出Router对象\r\n   */\r\n  core.Router = Router;\r\n  /**\r\n   * 导出router\r\n   */\r\n  core.router = new Router();\r\n}(yufp.core, yufp));\n/**\r\n * /src/core/router.patch.js\r\n * @created by helin3 2018-08-10\r\n * @updated by kongqf 2018-08-28 修改unMount增加ie下调用垃圾回收方法\r\n * @description router-patch\r\n *   1、页面路由切换时，销毁vm实例\r\n *   2、页面路由切换模拟多webview（迁移jiangcheng）\r\n *   若通过yufp.router.append打开的页面，必须通过yufp.router.remove移除，\r\n *   不能使用yufp.router.back，否则会报错\r\n */\r\n(function (core, yufp) {\r\n  /**\r\n   * vm对象实例管理器\r\n   */\r\n  var VmMgr = function () {\r\n    /**\r\n     * append模式动画时间（ms）\r\n     */\r\n    this.duration = 300;\r\n    /**\r\n     * vm对象实例种子属性vmSeedAttr\r\n     */\r\n    this.vmSeedAttr = 'VM_SEED_ID';\r\n    /**\r\n     * vm对象实例种子自增值\r\n     */\r\n    this.vmSeed = 0;\r\n    /**\r\n     * vm对象实例存活表\r\n     */\r\n    this.vmAlive = {};\r\n\r\n    // 延迟执行mixin动作，放置到Vue加载完成后，因为涉及到调用Vue\r\n    this.minxinExecuted = false;\r\n  };\r\n\r\n  /**\r\n   * 获取新的对象实例种子id\r\n   */\r\n  VmMgr.prototype.vmGetSeedId = function () {\r\n    this.vmSeed++;\r\n    return 'VM_' + this.vmSeed;\r\n  };\r\n\r\n  /**\r\n   * 移除当前对象实例\r\n   * @param {*} id\r\n   */\r\n  VmMgr.prototype.vmStorageRemove = function (id) {\r\n    var vm = this.vmAlive[id];\r\n    if (vm) {\r\n      delete this.vmAlive[id];\r\n    }\r\n    return vm;\r\n  };\r\n\r\n  /**\r\n   * 存储当前vm对象实例\r\n   * @param {*} id\r\n   * @param {*} vm\r\n   */\r\n  VmMgr.prototype.vmStoragePut = function (id, vm) {\r\n    this.vmAlive[id] = vm;\r\n  };\r\n\r\n  /**\r\n   * 添加vm实例挂载时，将其存储于vm对象实例存活表中\r\n   */\r\n  VmMgr.prototype.mixin = function () {\r\n    var _this = this;\r\n    if (_this.minxinExecuted) {\r\n      return;\r\n    }\r\n    _this.minxinExecuted = true;\r\n    Vue.mixin({\r\n      mounted: function () {\r\n        var el = this.$el;\r\n        var id = el && el.getAttribute ? el.getAttribute(_this.vmSeedAttr) : false;\r\n        if (!id) {\r\n          id = el && el.parentNode ? el.parentNode.getAttribute(_this.vmSeedAttr) : false;\r\n        }\r\n        if (id) {\r\n          _this.vmStoragePut(id, this);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * 导出当前对象存储实例\r\n   */\r\n  core.vmMgr = new VmMgr();\r\n\r\n\r\n  /**\r\n   * 构建ViewMountHandlder对象\r\n   */\r\n  var ViewMountHandler = function () {\r\n  };\r\n\r\n  /**\r\n   * 替换加载\r\n   * @param id\r\n   * @param route\r\n   * @param cite\r\n   * @param router\r\n   * @param callback\r\n   * @param root\r\n   */\r\n  ViewMountHandler.prototype.replace = function (id, route, cite, router, callback, root) {\r\n    // css node节点数组\r\n    var cssNodes = [];\r\n    // js node节点数组\r\n    var jsNodes = [];\r\n    // html node节点\r\n    // var htmlNode;\r\n    // 获取第一节点\r\n    var node = core.utils.getFirstElementChild(root);\r\n    while (node != null) {\r\n      // 获取name\r\n      var nodeName = node.nodeName.toUpperCase();\r\n      if (nodeName === 'SCRIPT') {\r\n        jsNodes.push(node);\r\n      } else if (nodeName === 'LINK') {\r\n        cssNodes.push(node);\r\n      } else if (nodeName == 'DIV') {\r\n        // htmlNode = node;\r\n      }\r\n      node = core.utils.getNextElementSibling(node);\r\n    }\r\n    node = null;\r\n    var libs = [];\r\n    // 1、加入css\r\n    if (route.css) {\r\n      libs = libs.concat(route.css.split(','));\r\n    }\r\n    // 2、加入js\r\n    if (route.js) {\r\n      libs = libs.concat(route.js.split(','));\r\n    }\r\n    // 获取html资源\r\n    core.require.get(route.html, function (code, data) {\r\n      // 正常返回\r\n      if (code != 0) {\r\n        core.logger.error('core.router.patch: loading html resource failed');\r\n        router.eventChain.fire();\r\n        return;\r\n      }\r\n      var mId = '#' + root.id;\r\n      // 数组参数\r\n      var args = {\r\n        'cssPoint': mId,\r\n        'jsPoint': mId\r\n      };\r\n      // 加载css和js\r\n      core.require.require(libs, function () {\r\n        // 释放旧的page\r\n        router.unMount(cite.rootId);\r\n\r\n        var args = arguments;\r\n        // 获取export函数\r\n        var exports;\r\n        for (var i = 0; i < args.length; i++) {\r\n          if (core.utils.type(args[i]) === 'object') {\r\n            exports = args[i];\r\n            break;\r\n          }\r\n        }\r\n        if (exports && exports.mount) {\r\n          // 执行过滤器\r\n          router.doFilters(core.FilterType.Mount, id, cite);\r\n          // 执行mount方法\r\n          try {\r\n            exports.mount(id, cite);\r\n          } catch (ex) {\r\n            core.logger.error('core.router.patch: ', ex.Message, ex);\r\n          }\r\n        }\r\n\r\n        // 删除旧的js节点\r\n        for (var i = 0; root.hasChildNodes() && i < jsNodes.length; i++) {\r\n          try {\r\n            root.removeChild(jsNodes[i]);\r\n          } catch (ex) {\r\n          }\r\n        }\r\n        jsNodes = null;\r\n        // 删除旧的css节点\r\n        for (var i = 0; root.hasChildNodes() && i < cssNodes.length; i++) {\r\n          try {\r\n            root.removeChild(cssNodes[i]);\r\n          } catch (ex) {\r\n          }\r\n        }\r\n        cssNodes = null;\r\n\r\n        var newHtmlNode = document.createElement('div');\r\n        newHtmlNode.innerHTML = data;\r\n        // newHtmlNode.id = core.utils.uid('html', 0, 'RT_');\r\n        var hNodeId = core.utils.uidcode('RT_', cite.id);\r\n        var domLen = document.getElementById(hNodeId);\r\n        if (domLen) {\r\n          hNodeId = hNodeId + '_' + +new Date();\r\n        }\r\n        newHtmlNode.id = hNodeId;\r\n        // 记录html node\r\n        cite.el = '#' + hNodeId + ' :first-child';\r\n        newHtmlNode.setAttribute(core.vmMgr.vmSeedAttr, core.vmMgr.vmGetSeedId());\r\n        // 新增html节点\r\n        root.appendChild(newHtmlNode);\r\n        // 调用回调函数\r\n        callback(0, exports, mId);\r\n        root = newHtmlNode = data = null;\r\n      }, args);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * 替换加载\r\n   *\r\n   * @param id\r\n   * @param route\r\n   * @param cite\r\n   * @param router\r\n   * @param callback\r\n   * @param root\r\n   */\r\n  ViewMountHandler.prototype.append = function (id, route, cite, router, callback, root) {\r\n    var libs = [];\r\n    // 1、加入css\r\n    if (route.css) {\r\n      libs = libs.concat(route.css.split(','));\r\n    }\r\n    // 2、加入js\r\n    if (route.js) {\r\n      libs = libs.concat(route.js.split(','));\r\n    }\r\n    // 获取html资源\r\n    core.require.get(route.html, function (code, data) {\r\n      // 正常返回\r\n      if (code != 0) {\r\n        core.logger.error('core.router.patch: loading html resource failed');\r\n        router.eventChain.fire();\r\n        return;\r\n      }\r\n      var view = document.createElement('div');\r\n      view.classList.add('yu-view');\r\n      view.classList.add('yu-view-hide');\r\n      view.id = core.utils.uid('html', 0, 'VW_');\r\n      root.appendChild(view);\r\n      var mId = '#' + root.id + ' #' + view.id;\r\n      // 数组参数\r\n      var args = {\r\n        'cssPoint': mId,\r\n        'jsPoint': mId\r\n      };\r\n      // 加载css和js\r\n      core.require.require(libs, function () {\r\n        var args = arguments;\r\n        // 获取export函数\r\n        var exports;\r\n        for (var i = 0; i < args.length; i++) {\r\n          if (core.utils.type(args[i]) === 'object') {\r\n            exports = args[i];\r\n            break;\r\n          }\r\n        }\r\n        if (exports && exports.mount) {\r\n          // 执行过滤器\r\n          router.doFilters(core.FilterType.Mount, id, cite);\r\n          // 执行mount方法\r\n          try {\r\n            exports.mount(id, cite);\r\n          } catch (ex) {\r\n            core.logger.error('core.router.patch: ', ex.Message, ex);\r\n          }\r\n        }\r\n\r\n        // 创建新的node节点\r\n        var newHtmlNode = document.createElement('div');\r\n        newHtmlNode.style = 'height: 100%;';\r\n        // newHtmlNode.id = core.utils.uid('html', 0, 'RT_');\r\n        var hNodeId = core.utils.uidcode('RT_', cite.id);\r\n        var domLen = document.getElementById(hNodeId);\r\n        if (domLen) {\r\n          hNodeId = hNodeId + '_' + +new Date();\r\n        }\r\n        newHtmlNode.id = hNodeId;\r\n        // 记录html node\r\n        cite.el = '#' + hNodeId + ' :first-child';\r\n        // 设置seed 属性\r\n        newHtmlNode.setAttribute(core.vmMgr.vmSeedAttr, core.vmMgr.vmGetSeedId());\r\n        // 设置html内容\r\n        newHtmlNode.innerHTML = data;\r\n        // 新增html节点\r\n        view.appendChild(newHtmlNode);\r\n        // 调用回调函数\r\n        callback(0, exports, mId);\r\n\r\n        // 动画完成才调用函数\r\n        setTimeout(function () {\r\n          view.classList.remove('yu-view-hide');\r\n          view.classList.add('yu-view-anim-slidein-right');\r\n          view = null;\r\n        }, 3);\r\n      }, args);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * 加载\r\n   *\r\n   * @param id\r\n   * @param route\r\n   * @param cite\r\n   * @param router\r\n   * @param callback\r\n   */\r\n  ViewMountHandler.prototype.mount = function (id, route, cite, router, callback) {\r\n    core.vmMgr.mixin();\r\n    // 获取root id\r\n    var rootId = cite.rootId;\r\n    // 获取root节点\r\n    var root = document.getElementById(rootId);\r\n    if (cite.options && cite.options.openPolicy === core.OpenPolicy.Append) {\r\n      this.append(id, route, cite, router, callback, root);\r\n    } else {\r\n      this.replace(id, route, cite, router, callback, root);\r\n    }\r\n  };\r\n  /**\r\n   * 卸载\r\n   *\r\n   * @param id\r\n   * @param route\r\n   * @param rootId\r\n   * @param cite\r\n   * @param exports\r\n   * @param router\r\n   */\r\n  ViewMountHandler.prototype.unMount = function (id, route, cite, exports, router) {\r\n    var divEl = document.querySelector(cite.el);\r\n    divEl = divEl.parentNode; // #xxx :first-child\r\n    var vsid = divEl.getAttribute(core.vmMgr.vmSeedAttr);\r\n    // 准备待销毁的vue实例对象\r\n    var vm = vsid !== undefined ? core.vmMgr.vmStorageRemove(vsid) : null;\r\n    if (cite.options && cite.options.openPolicy == core.OpenPolicy.Append) {\r\n      try {\r\n        var node = document.querySelector(cite.root);\r\n        node.classList.remove('yu-view-anim-slidein-right');\r\n        node.classList.add('yu-view-anim-slideout-right');\r\n      } finally {\r\n        setTimeout(function () {\r\n          node.parentNode && node.parentNode.removeChild(node);\r\n          vm ? vm.$destroy() : 0;\r\n          node = null;\r\n          vm = null;\r\n        }, core.vmMgr.duration);\r\n      }\r\n    } else {\r\n      divEl.parentNode && divEl.parentNode.removeChild(divEl);\r\n      vm ? vm.$destroy() : 0;\r\n      vm = null;\r\n      divEl = null;\r\n    }\r\n\r\n    // 执行过滤器\r\n    router.doFilters(core.FilterType.UnMount, id, cite);\r\n    // 执行unMount方法\r\n    if (exports.unMount) {\r\n      try {\r\n        exports.unMount(id, cite);\r\n      } catch (ex) {\r\n        core.logger.error('core.router.patch: ', ex.Message, ex);\r\n      }\r\n    }\r\n    this._gc(); // 该方法目前只在ie上生效\r\n  };\r\n  /**\r\n   * 调用浏览器垃圾回收方法,该方法主要针对ie调用\r\n   */\r\n  ViewMountHandler.prototype._gc = function () {\r\n    if (typeof window.CollectGarbage === 'function') {\r\n      // 在当前环境中，调用不确保能立即释放\r\n      setTimeout(function () {\r\n        /* eslint new-cap: \"off\" */\r\n        window.CollectGarbage(); // 在IE上测试，该操作能及时回收垃圾\r\n      }, 4); // 对浏览器而言，setTimeout默认最小4ms\r\n    }\r\n  };\r\n  // 加入mount handler\r\n  core.router.addMountHandler('default', new ViewMountHandler());\r\n}(yufp.core, yufp));\n\n"]}